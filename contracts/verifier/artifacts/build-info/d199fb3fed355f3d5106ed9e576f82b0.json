{
	"id": "d199fb3fed355f3d5106ed9e576f82b0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"AA/contracts/verifier/MerkleStatementContract.sol": {
				"content": "/*\n  Copyright 2019-2022 StarkWare Industries Ltd.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  https://www.starkware.co/open-source-license/\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions\n  and limitations under the License.\n*/\n// SPDX-License-Identifier: Apache-2.0.\npragma solidity >=0.6.12;\n\nimport \"../FactRegistry.sol\";\nimport \"./MerkleVerifier.sol\";\n\ncontract MerkleStatementContract is MerkleVerifier, FactRegistry {\n    /*\n      This function receives an initial Merkle queue (consists of indices of leaves in the Merkle\n      in addition to their values) and a Merkle view (contains the values of all the nodes\n      required to be able to validate the queue). In case of success it registers the Merkle fact,\n      which is the hash of the queue together with the resulting root.\n    */\n    // NOLINTNEXTLINE: external-function.\n    function verifyMerkle(\n        uint256[] memory merkleView,\n        uint256[] memory initialMerkleQueue,\n        uint256 height,\n        uint256 expectedRoot\n    ) public {\n        // Ensure 'height' is bounded as a sanity check (the bound is somewhat arbitrary).\n        require(height < 200, \"Height too big\");\n\n        require(\n            initialMerkleQueue.length <= MAX_N_MERKLE_VERIFIER_QUERIES * 2,\n            \"TOO_MANY_MERKLE_QUERIES\"\n        );\n        require(initialMerkleQueue.length % 2 == 0, \"ODD_MERKLE_QUEUE_SIZE\");\n\n        uint256 merkleQueuePtr;\n        uint256 channelPtr;\n        uint256 nQueries;\n        uint256 dataToHashPtr;\n        uint256 badInput = 0;\n\n        assembly {\n            // Skip 0x20 bytes length at the beginning of the merkleView.\n            let merkleViewPtr := add(merkleView, 0x20)\n            // Let channelPtr point to a free space.\n            channelPtr := mload(0x40) // freePtr.\n            // channelPtr will point to the merkleViewPtr since the 'verify' function expects\n            // a pointer to the proofPtr.\n            mstore(channelPtr, merkleViewPtr)\n            // Skip 0x20 bytes length at the beginning of the initialMerkleQueue.\n            merkleQueuePtr := add(initialMerkleQueue, 0x20)\n            // Get number of queries.\n            nQueries := div(mload(initialMerkleQueue), 0x2) //NOLINT: divide-before-multiply.\n            // Get a pointer to the end of initialMerkleQueue.\n            let initialMerkleQueueEndPtr := add(\n                merkleQueuePtr,\n                mul(nQueries, MERKLE_SLOT_SIZE_IN_BYTES)\n            )\n            // Let dataToHashPtr point to a free memory.\n            dataToHashPtr := add(channelPtr, 0x20) // Next freePtr.\n\n            // Copy initialMerkleQueue to dataToHashPtr and validaite the indices.\n            // The indices need to be in the range [2**height..2*(height+1)-1] and\n            // strictly incrementing.\n\n            // First index needs to be >= 2**height.\n            let idxLowerLimit := shl(height, 1)\n            for {\n\n            } lt(merkleQueuePtr, initialMerkleQueueEndPtr) {\n\n            } {\n                let curIdx := mload(merkleQueuePtr)\n                // badInput |= curIdx < IdxLowerLimit.\n                badInput := or(badInput, lt(curIdx, idxLowerLimit))\n\n                // The next idx must be at least curIdx + 1.\n                idxLowerLimit := add(curIdx, 1)\n\n                // Copy the pair (idx, hash) to the dataToHash array.\n                mstore(dataToHashPtr, curIdx)\n                mstore(\n                    add(dataToHashPtr, 0x20),\n                    mload(add(merkleQueuePtr, 0x20))\n                )\n\n                dataToHashPtr := add(dataToHashPtr, 0x40)\n                merkleQueuePtr := add(merkleQueuePtr, MERKLE_SLOT_SIZE_IN_BYTES)\n            }\n\n            // We need to enforce that lastIdx < 2**(height+1)\n            // => fail if lastIdx >= 2**(height+1)\n            // => fail if (lastIdx + 1) > 2**(height+1)\n            // => fail if idxLowerLimit > 2**(height+1).\n            badInput := or(badInput, gt(idxLowerLimit, shl(height, 2)))\n\n            // Reset merkleQueuePtr.\n            merkleQueuePtr := add(initialMerkleQueue, 0x20)\n            // Let freePtr point to a free memory (one word after the copied queries - reserved\n            // for the root).\n            mstore(0x40, add(dataToHashPtr, 0x20))\n        }\n\n        require(badInput == 0, \"INVALID_MERKLE_INDICES\");\n        bytes32 resRoot = verifyMerkle(\n            channelPtr,\n            merkleQueuePtr,\n            bytes32(expectedRoot),\n            nQueries\n        );\n\n        bytes32 factHash;\n        assembly {\n            // Append the resulted root (should be the return value of verify) to dataToHashPtr.\n            mstore(dataToHashPtr, resRoot)\n            // Reset dataToHashPtr.\n            dataToHashPtr := add(channelPtr, 0x20)\n            factHash := keccak256(dataToHashPtr, add(mul(nQueries, 0x40), 0x20))\n        }\n\n        registerFact(factHash);\n    }\n}\n"
			},
			"AA/contracts/verifier/MerkleVerifier.sol": {
				"content": "/*\n  Copyright 2019-2022 StarkWare Industries Ltd.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  https://www.starkware.co/open-source-license/\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions\n  and limitations under the License.\n*/\n// SPDX-License-Identifier: Apache-2.0.\npragma solidity >=0.6.12;\n\nimport \"./IMerkleVerifier.sol\";\n\ncontract MerkleVerifier is IMerkleVerifier {\n    // Commitments are masked to 160bit using the following mask to save gas costs.\n    uint256 internal constant COMMITMENT_MASK = (\n        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000\n    );\n\n    // // TODO: change back for SHARP compatibility\n    // uint256 internal constant COMMITMENT_MASK = (\n    //     0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\n    // );\n\n    // The size of a commitment. We use 32 bytes (rather than 20 bytes) per commitment as it\n    // simplifies the code.\n    uint256 internal constant COMMITMENT_SIZE_IN_BYTES = 0x20;\n\n    // The size of two commitments.\n    uint256 internal constant TWO_COMMITMENTS_SIZE_IN_BYTES = 0x40;\n\n    // The size of and index in the verifyMerkle queue.\n    uint256 internal constant INDEX_SIZE_IN_BYTES = 0x20;\n\n    /*\n      Verifies a Merkle tree decommitment for n leaves in a Merkle tree with N leaves.\n\n      The inputs data sits in the queue at queuePtr.\n      Each slot in the queue contains a 32 bytes leaf index and a 32 byte leaf value.\n      The indices need to be in the range [N..2*N-1] and strictly incrementing.\n      Decommitments are read from the channel in the ctx.\n\n      The input data is destroyed during verification.\n    */\n    function verifyMerkle(\n        uint256 channelPtr,\n        uint256 queuePtr,\n        bytes32 root,\n        uint256 n\n    ) internal view virtual override returns (bytes32 hash) {\n        require(n <= MAX_N_MERKLE_VERIFIER_QUERIES, \"TOO_MANY_MERKLE_QUERIES\");\n\n        assembly {\n            // queuePtr + i * MERKLE_SLOT_SIZE_IN_BYTES gives the i'th index in the queue.\n            // hashesPtr + i * MERKLE_SLOT_SIZE_IN_BYTES gives the i'th hash in the queue.\n            let hashesPtr := add(queuePtr, INDEX_SIZE_IN_BYTES)\n            let queueSize := mul(n, MERKLE_SLOT_SIZE_IN_BYTES)\n\n            // The items are in slots [0, n-1].\n            let rdIdx := 0\n            let wrIdx := 0 // = n % n.\n\n            // Iterate the queue until we hit the root.\n            let index := mload(add(rdIdx, queuePtr))\n            let proofPtr := mload(channelPtr)\n\n            // while(index > 1).\n            for {\n\n            } gt(index, 1) {\n\n            } {\n                let siblingIndex := xor(index, 1)\n                // sibblingOffset := COMMITMENT_SIZE_IN_BYTES * lsb(siblingIndex).\n                let sibblingOffset := mulmod(\n                    siblingIndex,\n                    COMMITMENT_SIZE_IN_BYTES,\n                    TWO_COMMITMENTS_SIZE_IN_BYTES\n                )\n\n                // Store the hash corresponding to index in the correct slot.\n                // 0 if index is even and 0x20 if index is odd.\n                // The hash of the sibling will be written to the other slot.\n                mstore(xor(0x20, sibblingOffset), mload(add(rdIdx, hashesPtr)))\n                rdIdx := addmod(rdIdx, MERKLE_SLOT_SIZE_IN_BYTES, queueSize)\n\n                // Inline channel operation:\n                // Assume we are going to read a new hash from the proof.\n                // If this is not the case add(proofPtr, COMMITMENT_SIZE_IN_BYTES) will be reverted.\n                let newHashPtr := proofPtr\n                proofPtr := add(proofPtr, COMMITMENT_SIZE_IN_BYTES)\n\n                // Push index/2 into the queue, before reading the next index.\n                // The order is important, as otherwise we may try to read from an empty queue (in\n                // the case where we are working on one item).\n                // wrIdx will be updated after writing the relevant hash to the queue.\n                mstore(add(wrIdx, queuePtr), div(index, 2))\n\n                // Load the next index from the queue and check if it is our sibling.\n                index := mload(add(rdIdx, queuePtr))\n                if eq(index, siblingIndex) {\n                    // Take sibling from queue rather than from proof.\n                    newHashPtr := add(rdIdx, hashesPtr)\n                    // Revert reading from proof.\n                    proofPtr := sub(proofPtr, COMMITMENT_SIZE_IN_BYTES)\n                    rdIdx := addmod(rdIdx, MERKLE_SLOT_SIZE_IN_BYTES, queueSize)\n\n                    // Index was consumed, read the next one.\n                    // Note that the queue can't be empty at this point.\n                    // The index of the parent of the current node was already pushed into the\n                    // queue, and the parent is never the sibling.\n                    index := mload(add(rdIdx, queuePtr))\n                }\n\n                mstore(sibblingOffset, mload(newHashPtr))\n\n                // Push the new hash to the end of the queue.\n                mstore(\n                    add(wrIdx, hashesPtr),\n                    and(\n                        COMMITMENT_MASK,\n                        keccak256(0x00, TWO_COMMITMENTS_SIZE_IN_BYTES)\n                    )\n                )\n                wrIdx := addmod(wrIdx, MERKLE_SLOT_SIZE_IN_BYTES, queueSize)\n            }\n            hash := mload(add(rdIdx, hashesPtr))\n\n            // Update the proof pointer in the context.\n            mstore(channelPtr, proofPtr)\n        }\n        require(hash == root, \"INVALID_MERKLE_PROOF\");\n    }\n}\n"
			},
			"AA/contracts/FactRegistry.sol": {
				"content": "/*\n  Copyright 2019-2022 StarkWare Industries Ltd.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  https://www.starkware.co/open-source-license/\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions\n  and limitations under the License.\n*/\n// SPDX-License-Identifier: Apache-2.0.\npragma solidity >=0.6.12;\n\nimport \"./IQueryableFactRegistry.sol\";\n\ncontract FactRegistry is IQueryableFactRegistry {\n    // Mapping: fact hash -> true.\n    mapping(bytes32 => bool) private verifiedFact;\n\n    // Indicates whether the Fact Registry has at least one fact registered.\n    bool anyFactRegistered = false;\n\n    /*\n      Checks if a fact has been verified.\n    */\n    function isValid(bytes32 fact) external view override returns (bool) {\n        return _factCheck(fact);\n    }\n\n    /*\n      This is an internal method to check if the fact is already registered.\n      In current implementation of FactRegistry it's identical to isValid().\n      But the check is against the local fact registry,\n      So for a derived referral fact registry, it's not the same.\n    */\n    function _factCheck(bytes32 fact) internal view returns (bool) {\n        return verifiedFact[fact];\n    }\n\n    function registerFact(bytes32 factHash) internal {\n        // This function stores the fact hash in the mapping.\n        verifiedFact[factHash] = true;\n\n        // Mark first time off.\n        if (!anyFactRegistered) {\n            anyFactRegistered = true;\n        }\n    }\n\n    /*\n      Indicates whether at least one fact was registered.\n    */\n    function hasRegisteredFact() external view override returns (bool) {\n        return anyFactRegistered;\n    }\n}\n"
			},
			"AA/contracts/verifier/IMerkleVerifier.sol": {
				"content": "/*\n  Copyright 2019-2022 StarkWare Industries Ltd.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  https://www.starkware.co/open-source-license/\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions\n  and limitations under the License.\n*/\n// SPDX-License-Identifier: Apache-2.0.\npragma solidity >=0.6.12;\n\nabstract contract IMerkleVerifier {\n    uint256 internal constant MAX_N_MERKLE_VERIFIER_QUERIES = 128;\n\n    // The size of a SLOT in the verifyMerkle queue.\n    // Every slot holds a (index, hash) pair.\n    uint256 internal constant MERKLE_SLOT_SIZE_IN_BYTES = 0x40;\n\n    function verifyMerkle(\n        uint256 channelPtr,\n        uint256 queuePtr,\n        bytes32 root,\n        uint256 n\n    ) internal view virtual returns (bytes32 hash);\n}\n"
			},
			"AA/contracts/IQueryableFactRegistry.sol": {
				"content": "/*\n  Copyright 2019-2022 StarkWare Industries Ltd.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  https://www.starkware.co/open-source-license/\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions\n  and limitations under the License.\n*/\n// SPDX-License-Identifier: Apache-2.0.\npragma solidity >=0.6.12;\n\nimport \"./IFactRegistry.sol\";\n\n/*\n  Extends the IFactRegistry interface with a query method that indicates\n  whether the fact registry has successfully registered any fact or is still empty of such facts.\n*/\ninterface IQueryableFactRegistry is IFactRegistry {\n    /*\n      Returns true if at least one fact has been registered.\n    */\n    function hasRegisteredFact() external view returns (bool);\n}\n"
			},
			"AA/contracts/IFactRegistry.sol": {
				"content": "/*\n  Copyright 2019-2022 StarkWare Industries Ltd.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  https://www.starkware.co/open-source-license/\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions\n  and limitations under the License.\n*/\n// SPDX-License-Identifier: Apache-2.0.\npragma solidity >=0.6.12;\n\n/*\n  The Fact Registry design pattern is a way to separate cryptographic verification from the\n  business logic of the contract flow.\n\n  A fact registry holds a hash table of verified \"facts\" which are represented by a hash of claims\n  that the registry hash check and found valid. This table may be queried by accessing the\n  isValid() function of the registry with a given hash.\n\n  In addition, each fact registry exposes a registry specific function for submitting new claims\n  together with their proofs. The information submitted varies from one registry to the other\n  depending of the type of fact requiring verification.\n\n  For further reading on the Fact Registry design pattern see this\n  `StarkWare blog post <https://medium.com/starkware/the-fact-registry-a64aafb598b6>`_.\n*/\ninterface IFactRegistry {\n    /*\n      Returns true if the given fact was previously registered in the contract.\n    */\n    function isValid(bytes32 fact) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"AA/contracts/FactRegistry.sol": {
				"FactRegistry": {
					"abi": [
						{
							"inputs": [],
							"name": "hasRegisteredFact",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "fact",
									"type": "bytes32"
								}
							],
							"name": "isValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AA/contracts/FactRegistry.sol\":703:1990  contract FactRegistry is IQueryableFactRegistry {... */\n  mstore(0x40, 0x80)\n    /* \"AA/contracts/FactRegistry.sol\":921:951  bool anyFactRegistered = false */\n  0x01\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"AA/contracts/FactRegistry.sol\":703:1990  contract FactRegistry is IQueryableFactRegistry {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"AA/contracts/FactRegistry.sol\":703:1990  contract FactRegistry is IQueryableFactRegistry {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6a938567\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd6354e15\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"AA/contracts/FactRegistry.sol\":1014:1123  function isValid(bytes32 fact) external view override returns (bool) {... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n        /* \"AA/contracts/FactRegistry.sol\":1077:1081  bool */\n      0x00\n        /* \"AA/contracts/FactRegistry.sol\":1499:1517  verifiedFact[fact] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"AA/contracts/FactRegistry.sol\":1014:1123  function isValid(bytes32 fact) external view override returns (bool) {... */\n      jump\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":364:378   */\n      swap1\n      iszero\n        /* \"#utility.yul\":357:379   */\n      iszero\n        /* \"#utility.yul\":339:380   */\n      dup2\n      mstore\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":312:330   */\n      add\n        /* \"AA/contracts/FactRegistry.sol\":1014:1123  function isValid(bytes32 fact) external view override returns (bool) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AA/contracts/FactRegistry.sol\":1880:1988  function hasRegisteredFact() external view override returns (bool) {... */\n    tag_4:\n        /* \"AA/contracts/FactRegistry.sol\":1964:1981  anyFactRegistered */\n      and(0xff, sload(0x01))\n        /* \"AA/contracts/FactRegistry.sol\":1880:1988  function hasRegisteredFact() external view override returns (bool) {... */\n      jump(tag_5)\n        /* \"#utility.yul\":14:194   */\n    tag_7:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_21\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_21:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220da7bd44118edaa7fc5e70e77465f7fae825a39d677023f9c6bf994e1e915e62164736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526001805460ff19169055348015610019575f80fd5b5060bd806100265f395ff3fe6080604052348015600e575f80fd5b50600436106030575f3560e01c80636a938567146034578063d6354e15146067575b5f80fd5b6053603f3660046071565b5f9081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b60015460ff166053565b5f602082840312156080575f80fd5b503591905056fea2646970667358221220da7bd44118edaa7fc5e70e77465f7fae825a39d677023f9c6bf994e1e915e62164736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xBD DUP1 PUSH2 0x26 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A938567 EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0xD6354E15 EQ PUSH1 0x67 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x53 PUSH1 0x3F CALLDATASIZE PUSH1 0x4 PUSH1 0x71 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH1 0x53 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x80 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA PUSH28 0xD44118EDAA7FC5E70E77465F7FAE825A39D677023F9C6BF994E1E915 0xE6 0x21 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "703:1287:0:-:0;;;921:30;;;-1:-1:-1;;921:30:0;;;703:1287;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_factCheck_36": {
									"entryPoint": null,
									"id": 36,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasRegisteredFact_65": {
									"entryPoint": null,
									"id": 65,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isValid_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:388:6",
										"nodeType": "YulBlock",
										"src": "0:388:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:6",
													"nodeType": "YulBlock",
													"src": "84:110:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:6",
																"nodeType": "YulBlock",
																"src": "130:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:6",
																					"nodeType": "YulLiteral",
																					"src": "139:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:6",
																					"nodeType": "YulLiteral",
																					"src": "142:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:6"
																			},
																			"nativeSrc": "132:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:6"
																		},
																		"nativeSrc": "132:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:6"
																		},
																		"nativeSrc": "101:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:6",
																		"nodeType": "YulLiteral",
																		"src": "126:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:6"
																},
																"nativeSrc": "97:32:6",
																"nodeType": "YulFunctionCall",
																"src": "97:32:6"
															},
															"nativeSrc": "94:52:6",
															"nodeType": "YulIf",
															"src": "94:52:6"
														},
														{
															"nativeSrc": "155:33:6",
															"nodeType": "YulAssignment",
															"src": "155:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:6"
																},
																"nativeSrc": "165:23:6",
																"nodeType": "YulFunctionCall",
																"src": "165:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "14:180:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:6",
														"nodeType": "YulTypedName",
														"src": "50:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:6",
														"nodeType": "YulTypedName",
														"src": "61:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:6",
														"nodeType": "YulTypedName",
														"src": "73:6:6",
														"type": ""
													}
												],
												"src": "14:180:6"
											},
											{
												"body": {
													"nativeSrc": "294:92:6",
													"nodeType": "YulBlock",
													"src": "294:92:6",
													"statements": [
														{
															"nativeSrc": "304:26:6",
															"nodeType": "YulAssignment",
															"src": "304:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "327:2:6",
																		"nodeType": "YulLiteral",
																		"src": "327:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "312:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "312:3:6"
																},
																"nativeSrc": "312:18:6",
																"nodeType": "YulFunctionCall",
																"src": "312:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "304:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "304:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "346:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "346:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "371:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "371:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "364:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "364:6:6"
																				},
																				"nativeSrc": "364:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "364:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "357:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "357:6:6"
																		},
																		"nativeSrc": "357:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "357:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "339:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "339:6:6"
																},
																"nativeSrc": "339:41:6",
																"nodeType": "YulFunctionCall",
																"src": "339:41:6"
															},
															"nativeSrc": "339:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "339:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "199:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "263:9:6",
														"nodeType": "YulTypedName",
														"src": "263:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "274:6:6",
														"nodeType": "YulTypedName",
														"src": "274:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "285:4:6",
														"nodeType": "YulTypedName",
														"src": "285:4:6",
														"type": ""
													}
												],
												"src": "199:187:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106030575f3560e01c80636a938567146034578063d6354e15146067575b5f80fd5b6053603f3660046071565b5f9081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b60015460ff166053565b5f602082840312156080575f80fd5b503591905056fea2646970667358221220da7bd44118edaa7fc5e70e77465f7fae825a39d677023f9c6bf994e1e915e62164736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A938567 EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0xD6354E15 EQ PUSH1 0x67 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x53 PUSH1 0x3F CALLDATASIZE PUSH1 0x4 PUSH1 0x71 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH1 0x53 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x80 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA PUSH28 0xD44118EDAA7FC5E70E77465F7FAE825A39D677023F9C6BF994E1E915 0xE6 0x21 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "703:1287:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1014:109;;;;;;:::i;:::-;1077:4;1499:18;;;;;;;;;;;;;;1014:109;;;;364:14:6;;357:22;339:41;;327:2;312:18;1014:109:0;;;;;;;1880:108;1964:17;;;;1880:108;;14:180:6;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:6;;14:180;-1:-1:-1;14:180:6:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "37800",
								"executionCost": "24303",
								"totalCost": "62103"
							},
							"external": {
								"hasRegisteredFact()": "2291",
								"isValid(bytes32)": "2416"
							},
							"internal": {
								"_factCheck(bytes32)": "infinite",
								"registerFact(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 703,
									"end": 1990,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 921,
									"end": 951,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 921,
									"end": 951,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 951,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 921,
									"end": 951,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 921,
									"end": 951,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 951,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 703,
									"end": 1990,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220da7bd44118edaa7fc5e70e77465f7fae825a39d677023f9c6bf994e1e915e62164736f6c63430008160033",
									".code": [
										{
											"begin": 703,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "6A938567"
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "D6354E15"
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1990,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1014,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 364,
											"end": 378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 364,
											"end": 378,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 357,
											"end": 379,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 339,
											"end": 380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 339,
											"end": 380,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 312,
											"end": 330,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1988,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1880,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1964,
											"end": 1981,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1964,
											"end": 1981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1880,
											"end": 1988,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"AA/contracts/FactRegistry.sol",
								"AA/contracts/IFactRegistry.sol",
								"AA/contracts/IQueryableFactRegistry.sol",
								"AA/contracts/verifier/IMerkleVerifier.sol",
								"AA/contracts/verifier/MerkleStatementContract.sol",
								"AA/contracts/verifier/MerkleVerifier.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"hasRegisteredFact()": "d6354e15",
							"isValid(bytes32)": "6a938567"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"hasRegisteredFact\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"fact\",\"type\":\"bytes32\"}],\"name\":\"isValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AA/contracts/FactRegistry.sol\":\"FactRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AA/contracts/FactRegistry.sol\":{\"keccak256\":\"0xd7b40f1619ad2020c5a227bc0855dfa5e9b40a238731b4e5f383fdc9cb2e03f5\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://31e1d7128e86019c3b645ceb6ad3904ab195a959f89a81b15aee1df378a950fc\",\"dweb:/ipfs/QmQhVdM3ut37QM9LLspWFihxZBuwQ3XedxPEH1EucLXCRx\"]},\"AA/contracts/IFactRegistry.sol\":{\"keccak256\":\"0xf2f440807966ada15e63fb19919f42f02b0a21d2b5afc461e716ef6aa616d880\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://6fc3608982ed4c58429d8ee75bfb82b52f6ad46d654075bacbf02962cf938407\",\"dweb:/ipfs/QmeXFHk4vTZtSbcQTSVRzrXQ2PuyofY3CVTqKHNcH1hsx6\"]},\"AA/contracts/IQueryableFactRegistry.sol\":{\"keccak256\":\"0x6d401899fa6b540e6b3a18bdbca9bccf38a93cff93a43a73166deed6068e87b3\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://c208a68432793c427b5234782d8faa7a1ab4b17eb9ced76a48faf2bb7d3ae867\",\"dweb:/ipfs/QmaFeANL4KhjXsQwdjrzwMPYXHLxAEjShc4CrwMERg2ZXw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "AA/contracts/FactRegistry.sol:FactRegistry",
								"label": "verifiedFact",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_bool)"
							},
							{
								"astId": 11,
								"contract": "AA/contracts/FactRegistry.sol:FactRegistry",
								"label": "anyFactRegistered",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"AA/contracts/IFactRegistry.sol": {
				"IFactRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "fact",
									"type": "bytes32"
								}
							],
							"name": "isValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValid(bytes32)": "6a938567"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"fact\",\"type\":\"bytes32\"}],\"name\":\"isValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AA/contracts/IFactRegistry.sol\":\"IFactRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AA/contracts/IFactRegistry.sol\":{\"keccak256\":\"0xf2f440807966ada15e63fb19919f42f02b0a21d2b5afc461e716ef6aa616d880\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://6fc3608982ed4c58429d8ee75bfb82b52f6ad46d654075bacbf02962cf938407\",\"dweb:/ipfs/QmeXFHk4vTZtSbcQTSVRzrXQ2PuyofY3CVTqKHNcH1hsx6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"AA/contracts/IQueryableFactRegistry.sol": {
				"IQueryableFactRegistry": {
					"abi": [
						{
							"inputs": [],
							"name": "hasRegisteredFact",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "fact",
									"type": "bytes32"
								}
							],
							"name": "isValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"hasRegisteredFact()": "d6354e15",
							"isValid(bytes32)": "6a938567"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"hasRegisteredFact\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"fact\",\"type\":\"bytes32\"}],\"name\":\"isValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AA/contracts/IQueryableFactRegistry.sol\":\"IQueryableFactRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AA/contracts/IFactRegistry.sol\":{\"keccak256\":\"0xf2f440807966ada15e63fb19919f42f02b0a21d2b5afc461e716ef6aa616d880\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://6fc3608982ed4c58429d8ee75bfb82b52f6ad46d654075bacbf02962cf938407\",\"dweb:/ipfs/QmeXFHk4vTZtSbcQTSVRzrXQ2PuyofY3CVTqKHNcH1hsx6\"]},\"AA/contracts/IQueryableFactRegistry.sol\":{\"keccak256\":\"0x6d401899fa6b540e6b3a18bdbca9bccf38a93cff93a43a73166deed6068e87b3\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://c208a68432793c427b5234782d8faa7a1ab4b17eb9ced76a48faf2bb7d3ae867\",\"dweb:/ipfs/QmaFeANL4KhjXsQwdjrzwMPYXHLxAEjShc4CrwMERg2ZXw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"AA/contracts/verifier/IMerkleVerifier.sol": {
				"IMerkleVerifier": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AA/contracts/verifier/IMerkleVerifier.sol\":\"IMerkleVerifier\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AA/contracts/verifier/IMerkleVerifier.sol\":{\"keccak256\":\"0xc95b20d39f588b84bba3a7cdcdb9ba669f6624aa6209584702ddb11e98ee09a4\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://d3722af2e252b66be93a6fd2ee7bf94c2bc61db70aeea5168cdfa29db33b0682\",\"dweb:/ipfs/QmejZQPT83YVnhU3A7DrzwCbT8ZcdosQqGEL5bryECK6wh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"AA/contracts/verifier/MerkleStatementContract.sol": {
				"MerkleStatementContract": {
					"abi": [
						{
							"inputs": [],
							"name": "hasRegisteredFact",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "fact",
									"type": "bytes32"
								}
							],
							"name": "isValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "merkleView",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "initialMerkleQueue",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "height",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expectedRoot",
									"type": "uint256"
								}
							],
							"name": "verifyMerkle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AA/contracts/verifier/MerkleStatementContract.sol\":725:5249  contract MerkleStatementContract is MerkleVerifier, FactRegistry {... */\n  mstore(0x40, 0x80)\n    /* \"AA/contracts/FactRegistry.sol\":921:951  bool anyFactRegistered = false */\n  0x01\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"AA/contracts/verifier/MerkleStatementContract.sol\":725:5249  contract MerkleStatementContract is MerkleVerifier, FactRegistry {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":725:5249  contract MerkleStatementContract is MerkleVerifier, FactRegistry {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3fe317a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6a938567\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd6354e15\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1211:5247  function verifyMerkle(... */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"AA/contracts/FactRegistry.sol\":1014:1123  function isValid(bytes32 fact) external view override returns (bool) {... */\n    tag_4:\n      tag_10\n      tag_11\n      calldatasize\n      0x04\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n        /* \"#utility.yul\":2146:2160   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2139:2161   */\n      iszero\n        /* \"#utility.yul\":2121:2162   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2109:2111   */\n      0x20\n        /* \"#utility.yul\":2094:2112   */\n      add\n        /* \"AA/contracts/FactRegistry.sol\":1014:1123  function isValid(bytes32 fact) external view override returns (bool) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AA/contracts/FactRegistry.sol\":1880:1988  function hasRegisteredFact() external view override returns (bool) {... */\n    tag_5:\n        /* \"AA/contracts/FactRegistry.sol\":1964:1981  anyFactRegistered */\n      and(0xff, sload(0x01))\n        /* \"AA/contracts/FactRegistry.sol\":1880:1988  function hasRegisteredFact() external view override returns (bool) {... */\n      jump(tag_10)\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1211:5247  function verifyMerkle(... */\n    tag_9:\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1500:1503  200 */\n      0xc8\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1491:1497  height */\n      dup3\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1491:1503  height < 200 */\n      lt\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1483:1522  require(height < 200, \"Height too big\") */\n      tag_20\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2375:2377   */\n      0x20\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1483:1522  require(height < 200, \"Height too big\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2357:2378   */\n      mstore\n        /* \"#utility.yul\":2414:2416   */\n      0x0e\n        /* \"#utility.yul\":2394:2412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2387:2417   */\n      mstore\n      shl(0x90, 0x48656967687420746f6f20626967)\n        /* \"#utility.yul\":2433:2451   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2426:2470   */\n      mstore\n        /* \"#utility.yul\":2487:2505   */\n      0x64\n      add\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1483:1522  require(height < 200, \"Height too big\") */\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1583:1616  MAX_N_MERKLE_VERIFIER_QUERIES * 2 */\n      tag_23\n        /* \"AA/contracts/verifier/IMerkleVerifier.sol\":761:764  128 */\n      0x80\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1615:1616  2 */\n      0x02\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1583:1616  MAX_N_MERKLE_VERIFIER_QUERIES * 2 */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1554:1572  initialMerkleQueue */\n      dup4\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1554:1579  initialMerkleQueue.length */\n      mload\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1554:1616  initialMerkleQueue.length <= MAX_N_MERKLE_VERIFIER_QUERIES * 2 */\n      gt\n      iszero\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1533:1665  require(... */\n      tag_25\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2988:2990   */\n      0x20\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1533:1665  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2970:2991   */\n      mstore\n        /* \"#utility.yul\":3027:3029   */\n      0x17\n        /* \"#utility.yul\":3007:3025   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3000:3030   */\n      mstore\n      shl(0x48, 0x544f4f5f4d414e595f4d45524b4c455f51554552494553)\n        /* \"#utility.yul\":3046:3064   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3039:3092   */\n      mstore\n        /* \"#utility.yul\":3109:3127   */\n      0x64\n      add\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1533:1665  require(... */\n      tag_21\n        /* \"#utility.yul\":2786:3133   */\n      jump\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1533:1665  require(... */\n    tag_25:\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1711:1712  2 */\n      0x02\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1683:1701  initialMerkleQueue */\n      dup4\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1683:1708  initialMerkleQueue.length */\n      mload\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1683:1712  initialMerkleQueue.length % 2 */\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1683:1717  initialMerkleQueue.length % 2 == 0 */\n      iszero\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1675:1743  require(initialMerkleQueue.length % 2 == 0, \"ODD_MERKLE_QUEUE_SIZE\") */\n      tag_30\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3554:3556   */\n      0x20\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1675:1743  require(initialMerkleQueue.length % 2 == 0, \"ODD_MERKLE_QUEUE_SIZE\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3536:3557   */\n      mstore\n        /* \"#utility.yul\":3593:3595   */\n      0x15\n        /* \"#utility.yul\":3573:3591   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3566:3596   */\n      mstore\n      shl(0x58, 0x4f44445f4d45524b4c455f51554555455f53495a45)\n        /* \"#utility.yul\":3612:3630   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3605:3656   */\n      mstore\n        /* \"#utility.yul\":3673:3691   */\n      0x64\n      add\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1675:1743  require(initialMerkleQueue.length % 2 == 0, \"ODD_MERKLE_QUEUE_SIZE\") */\n      tag_21\n        /* \"#utility.yul\":3352:3697   */\n      jump\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1675:1743  require(initialMerkleQueue.length % 2 == 0, \"ODD_MERKLE_QUEUE_SIZE\") */\n    tag_30:\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":2127:2131  0x40 */\n      0x40\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":2121:2132  mload(0x40) */\n      dup1\n      mload\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":2036:2040  0x20 */\n      0x20\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":2020:2041  add(merkleView, 0x20) */\n      dup7\n      dup2\n      add\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":2293:2326  mstore(channelPtr, merkleViewPtr) */\n      dup3\n      mstore\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":2535:2560  mload(initialMerkleQueue) */\n      dup6\n      mload\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":2439:2468  add(initialMerkleQueue, 0x20) */\n      dup7\n      dup3\n      add\n      swap4\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":2562:2565  0x2 */\n      0x02\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":2531:2566  div(mload(initialMerkleQueue), 0x2) */\n      swap1\n      swap2\n      div\n      swap2\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":2902:2923  add(channelPtr, 0x20) */\n      dup4\n      dup2\n      add\n      swap2\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1754:1776  uint256 merkleQueuePtr */\n      0x00\n      swap2\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":2761:2801  mul(nQueries, MERKLE_SLOT_SIZE_IN_BYTES) */\n      swap1\n      dup5\n      mul\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":2708:2815  add(... */\n      dup10\n      add\n      add\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3245:3246  1 */\n      0x01\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3233:3247  shl(height, 1) */\n      dup9\n      shl\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3260:4041  for {... */\n    tag_33:\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3300:3324  initialMerkleQueueEndPtr */\n      dup2\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3284:3298  merkleQueuePtr */\n      dup8\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3281:3325  lt(merkleQueuePtr, initialMerkleQueueEndPtr) */\n      lt\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3260:4041  for {... */\n      iszero\n      tag_35\n      jumpi\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3375:3396  mload(merkleQueuePtr) */\n      dup7\n      mload\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3717:3746  mstore(dataToHashPtr, curIdx) */\n      dup1\n      dup6\n      mstore\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3863:3867  0x20 */\n      0x20\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3843:3868  add(merkleQueuePtr, 0x20) */\n      dup1\n      dup10\n      add\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3837:3869  mload(add(merkleQueuePtr, 0x20)) */\n      mload\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3791:3815  add(dataToHashPtr, 0x20) */\n      swap1\n      dup7\n      add\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3763:3887  mstore(... */\n      mstore\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3941:3945  0x40 */\n      0x40\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3981:4027  add(merkleQueuePtr, MERKLE_SLOT_SIZE_IN_BYTES) */\n      swap8\n      dup9\n      add\n      swap8\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3922:3946  add(dataToHashPtr, 0x40) */\n      swap1\n      swap5\n      add\n      swap4\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3493:3518  lt(curIdx, idxLowerLimit) */\n      swap1\n      dup2\n      lt\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3480:3519  or(badInput, lt(curIdx, idxLowerLimit)) */\n      swap3\n      swap1\n      swap3\n      or\n      swap2\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3627:3628  1 */\n      0x01\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3615:3629  add(curIdx, 1) */\n      add\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":3260:4041  for {... */\n      jump(tag_33)\n    tag_35:\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4434:4438  0x20 */\n      0x20\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4591:4615  add(dataToHashPtr, 0x20) */\n      dup5\n      dup2\n      add\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4585:4589  0x40 */\n      0x40\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4578:4616  mstore(0x40, add(dataToHashPtr, 0x20)) */\n      mstore\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4410:4439  add(initialMerkleQueue, 0x20) */\n      dup11\n      add\n      swap7\n      pop\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4337:4338  2 */\n      0x02\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4325:4339  shl(height, 2) */\n      dup10\n      shl\n      lt\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4294:4341  or(badInput, gt(idxLowerLimit, shl(height, 2))) */\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      pop\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4644:4657  badInput == 0 */\n      dup1\n      iszero\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4636:4684  require(badInput == 0, \"INVALID_MERKLE_INDICES\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3904:3906   */\n      0x20\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4636:4684  require(badInput == 0, \"INVALID_MERKLE_INDICES\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3886:3907   */\n      mstore\n        /* \"#utility.yul\":3943:3945   */\n      0x16\n        /* \"#utility.yul\":3923:3941   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3916:3946   */\n      mstore\n      shl(0x50, 0x494e56414c49445f4d45524b4c455f494e4449434553)\n        /* \"#utility.yul\":3962:3980   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3955:4007   */\n      mstore\n        /* \"#utility.yul\":4024:4042   */\n      0x64\n      add\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4636:4684  require(badInput == 0, \"INVALID_MERKLE_INDICES\") */\n      tag_21\n        /* \"#utility.yul\":3702:4048   */\n      jump\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4636:4684  require(badInput == 0, \"INVALID_MERKLE_INDICES\") */\n    tag_36:\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4694:4709  bytes32 resRoot */\n      0x00\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4712:4843  verifyMerkle(... */\n      tag_39\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4738:4748  channelPtr */\n      dup6\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4762:4776  merkleQueuePtr */\n      dup8\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4798:4810  expectedRoot */\n      dup10\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4825:4833  nQueries */\n      dup8\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4712:4724  verifyMerkle */\n      tag_40\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4712:4843  verifyMerkle(... */\n      jump\t// in\n    tag_39:\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4694:4843  bytes32 resRoot = verifyMerkle(... */\n      swap1\n      pop\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":4854:4870  bytes32 factHash */\n      0x00\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5022:5029  resRoot */\n      dup2\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5007:5020  dataToHashPtr */\n      dup5\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5000:5030  mstore(dataToHashPtr, resRoot) */\n      mstore\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5112:5116  0x20 */\n      0x20\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5100:5110  channelPtr */\n      dup7\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5096:5117  add(channelPtr, 0x20) */\n      add\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5079:5117  dataToHashPtr := add(channelPtr, 0x20) */\n      swap4\n      pop\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5192:5196  0x20 */\n      0x20\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5185:5189  0x40 */\n      0x40\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5175:5183  nQueries */\n      dup7\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5171:5190  mul(nQueries, 0x40) */\n      mul\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5167:5197  add(mul(nQueries, 0x40), 0x20) */\n      add\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5152:5165  dataToHashPtr */\n      dup5\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5142:5198  keccak256(dataToHashPtr, add(mul(nQueries, 0x40), 0x20)) */\n      keccak256\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5130:5198  factHash := keccak256(dataToHashPtr, add(mul(nQueries, 0x40), 0x20)) */\n      swap1\n      pop\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5218:5240  registerFact(factHash) */\n      tag_41\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5231:5239  factHash */\n      dup2\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5218:5230  registerFact */\n      tag_42\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":5218:5240  registerFact(factHash) */\n      jump\t// in\n    tag_41:\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1382:5247  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"AA/contracts/verifier/MerkleStatementContract.sol\":1211:5247  function verifyMerkle(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AA/contracts/FactRegistry.sol\":1014:1123  function isValid(bytes32 fact) external view override returns (bool) {... */\n    tag_13:\n        /* \"AA/contracts/FactRegistry.sol\":1077:1081  bool */\n      0x00\n        /* \"AA/contracts/FactRegistry.sol\":1499:1517  verifiedFact[fact] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"AA/contracts/FactRegistry.sol\":1100:1116  _factCheck(fact) */\n    tag_44:\n        /* \"AA/contracts/FactRegistry.sol\":1093:1116  return _factCheck(fact) */\n      swap3\n        /* \"AA/contracts/FactRegistry.sol\":1014:1123  function isValid(bytes32 fact) external view override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":1996:5942  function verifyMerkle(... */\n    tag_40:\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2159:2171  bytes32 hash */\n      0x00\n        /* \"AA/contracts/verifier/IMerkleVerifier.sol\":761:764  128 */\n      0x80\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2191:2192  n */\n      dup3\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2191:2225  n <= MAX_N_MERKLE_VERIFIER_QUERIES */\n      gt\n      iszero\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2183:2253  require(n <= MAX_N_MERKLE_VERIFIER_QUERIES, \"TOO_MANY_MERKLE_QUERIES\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2988:2990   */\n      0x20\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2183:2253  require(n <= MAX_N_MERKLE_VERIFIER_QUERIES, \"TOO_MANY_MERKLE_QUERIES\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2970:2991   */\n      mstore\n        /* \"#utility.yul\":3027:3029   */\n      0x17\n        /* \"#utility.yul\":3007:3025   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3000:3030   */\n      mstore\n      shl(0x48, 0x544f4f5f4d414e595f4d45524b4c455f51554552494553)\n        /* \"#utility.yul\":3046:3064   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3039:3092   */\n      mstore\n        /* \"#utility.yul\":3109:3127   */\n      0x64\n      add\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2183:2253  require(n <= MAX_N_MERKLE_VERIFIER_QUERIES, \"TOO_MANY_MERKLE_QUERIES\") */\n      tag_21\n        /* \"#utility.yul\":2786:3133   */\n      jump\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2183:2253  require(n <= MAX_N_MERKLE_VERIFIER_QUERIES, \"TOO_MANY_MERKLE_QUERIES\") */\n    tag_48:\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2500:2519  INDEX_SIZE_IN_BYTES */\n      0x20\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2490:2498  queuePtr */\n      dup5\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2486:2520  add(queuePtr, INDEX_SIZE_IN_BYTES) */\n      add\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2557:2582  MERKLE_SLOT_SIZE_IN_BYTES */\n      0x40\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2554:2555  n */\n      dup4\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2550:2583  mul(n, MERKLE_SLOT_SIZE_IN_BYTES) */\n      mul\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2658:2659  0 */\n      0x00\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2685:2686  0 */\n      dup1\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2798:2806  queuePtr */\n      dup8\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2791:2796  rdIdx */\n      dup3\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2787:2807  add(rdIdx, queuePtr) */\n      add\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2781:2808  mload(add(rdIdx, queuePtr)) */\n      mload\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2843:2853  channelPtr */\n      dup10\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2837:2854  mload(channelPtr) */\n      mload\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2901:5724  for {... */\n    tag_50:\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2932:2933  1 */\n      0x01\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2925:2930  index */\n      dup3\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2922:2934  gt(index, 1) */\n      gt\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2901:5724  for {... */\n      iszero\n      tag_52\n      jumpi\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3001:3002  1 */\n      0x01\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2994:2999  index */\n      dup3\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2990:3003  xor(index, 1) */\n      xor\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3233:3262  TWO_COMMITMENTS_SIZE_IN_BYTES */\n      0x40\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3187:3211  COMMITMENT_SIZE_IN_BYTES */\n      0x20\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3153:3165  siblingIndex */\n      dup3\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3125:3280  mulmod(... */\n      mulmod\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3569:3578  hashesPtr */\n      dup8\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3562:3567  rdIdx */\n      dup7\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3558:3579  add(rdIdx, hashesPtr) */\n      add\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3552:3580  mload(add(rdIdx, hashesPtr)) */\n      mload\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3535:3549  sibblingOffset */\n      dup2\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3529:3533  0x20 */\n      0x20\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3525:3550  xor(0x20, sibblingOffset) */\n      xor\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3518:3581  mstore(xor(0x20, sibblingOffset), mload(add(rdIdx, hashesPtr))) */\n      mstore\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3648:3657  queueSize */\n      dup7\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3621:3646  MERKLE_SLOT_SIZE_IN_BYTES */\n      0x40\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3614:3619  rdIdx */\n      dup8\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3607:3658  addmod(rdIdx, MERKLE_SLOT_SIZE_IN_BYTES, queueSize) */\n      addmod\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4376:4377  2 */\n      0x02\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4365:4378  div(index, 2) */\n      swap1\n      swap5\n      div\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4343:4363  add(wrIdx, queuePtr) */\n      dup6\n      dup14\n      add\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4336:4379  mstore(add(wrIdx, queuePtr), div(index, 2)) */\n      mstore\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4498:4518  add(rdIdx, queuePtr) */\n      dup12\n      dup5\n      add\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4492:4519  mload(add(rdIdx, queuePtr)) */\n      mload\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3598:3658  rdIdx := addmod(rdIdx, MERKLE_SLOT_SIZE_IN_BYTES, queueSize) */\n      swap4\n      swap6\n      pop\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3965:3989  COMMITMENT_SIZE_IN_BYTES */\n      0x20\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":3951:3990  add(proofPtr, COMMITMENT_SIZE_IN_BYTES) */\n      dup4\n      add\n      swap3\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4539:4562  eq(index, siblingIndex) */\n      dup3\n      dup6\n      sub\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4536:5267  if eq(index, siblingIndex) {... */\n      tag_53\n      jumpi\n      pop\n      not(0x1f)\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4774:4813  sub(proofPtr, COMMITMENT_SIZE_IN_BYTES) */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4670:4691  add(rdIdx, hashesPtr) */\n      dup6\n      dup9\n      add\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4884:4893  queueSize */\n      dup8\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4857:4882  MERKLE_SLOT_SIZE_IN_BYTES */\n      0x40\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4674:4679  rdIdx */\n      dup9\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4843:4894  addmod(rdIdx, MERKLE_SLOT_SIZE_IN_BYTES, queueSize) */\n      addmod\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4834:4894  rdIdx := addmod(rdIdx, MERKLE_SLOT_SIZE_IN_BYTES, queueSize) */\n      swap7\n      pop\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5239:5247  queuePtr */\n      dup13\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5232:5237  rdIdx */\n      dup8\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5228:5248  add(rdIdx, queuePtr) */\n      add\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5222:5249  mload(add(rdIdx, queuePtr)) */\n      mload\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5213:5249  index := mload(add(rdIdx, queuePtr)) */\n      swap5\n      pop\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":4536:5267  if eq(index, siblingIndex) {... */\n    tag_53:\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5308:5325  mload(newHashPtr) */\n      mload\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5285:5326  mstore(sibblingOffset, mload(newHashPtr)) */\n      swap1\n      mstore\n      pop\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5563:5592  TWO_COMMITMENTS_SIZE_IN_BYTES */\n      0x40\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5557:5561  0x00 */\n      0x00\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5547:5593  keccak256(0x00, TWO_COMMITMENTS_SIZE_IN_BYTES) */\n      dup2\n      swap1\n      keccak256\n      not(0xffffffffffffffffffffffff)\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5477:5615  and(... */\n      and\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5434:5455  add(wrIdx, hashesPtr) */\n      dup5\n      dup9\n      add\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5406:5633  mstore(... */\n      mstore\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5700:5709  queueSize */\n      dup6\n      swap1\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5438:5443  wrIdx */\n      dup5\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5659:5710  addmod(wrIdx, MERKLE_SLOT_SIZE_IN_BYTES, queueSize) */\n      addmod\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5650:5710  wrIdx := addmod(wrIdx, MERKLE_SLOT_SIZE_IN_BYTES, queueSize) */\n      swap3\n      pop\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":2901:5724  for {... */\n      jump(tag_50)\n    tag_52:\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5751:5772  add(rdIdx, hashesPtr) */\n      swap3\n      swap1\n      swap5\n      add\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5745:5773  mload(add(rdIdx, hashesPtr)) */\n      mload\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5843:5871  mstore(channelPtr, proofPtr) */\n      swap2\n      dup10\n      mstore\n      pop\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5745:5773  mload(add(rdIdx, hashesPtr)) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5898:5910  hash == root */\n      dup3\n      dup2\n      eq\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5890:5935  require(hash == root, \"INVALID_MERKLE_PROOF\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4255:4257   */\n      0x20\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5890:5935  require(hash == root, \"INVALID_MERKLE_PROOF\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4237:4258   */\n      mstore\n        /* \"#utility.yul\":4294:4296   */\n      0x14\n        /* \"#utility.yul\":4274:4292   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4267:4297   */\n      mstore\n      shl(0x61, 0x24a72b20a624a22fa6a2a925a622afa82927a7a3)\n        /* \"#utility.yul\":4313:4331   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4306:4356   */\n      mstore\n        /* \"#utility.yul\":4373:4391   */\n      0x64\n      add\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5890:5935  require(hash == root, \"INVALID_MERKLE_PROOF\") */\n      tag_21\n        /* \"#utility.yul\":4053:4397   */\n      jump\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":5890:5935  require(hash == root, \"INVALID_MERKLE_PROOF\") */\n    tag_54:\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":1996:5942  function verifyMerkle(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AA/contracts/FactRegistry.sol\":1530:1802  function registerFact(bytes32 factHash) internal {... */\n    tag_42:\n        /* \"AA/contracts/FactRegistry.sol\":1651:1663  verifiedFact */\n      0x00\n        /* \"AA/contracts/FactRegistry.sol\":1651:1673  verifiedFact[factHash] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"AA/contracts/FactRegistry.sol\":1651:1680  verifiedFact[factHash] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"AA/contracts/FactRegistry.sol\":1676:1680  true */\n      0x01\n        /* \"AA/contracts/FactRegistry.sol\":1651:1680  verifiedFact[factHash] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"AA/contracts/FactRegistry.sol\":1728:1745  anyFactRegistered */\n      sload\n        /* \"AA/contracts/FactRegistry.sol\":1651:1680  verifiedFact[factHash] = true */\n      0xff\n        /* \"AA/contracts/FactRegistry.sol\":1728:1745  anyFactRegistered */\n      and\n        /* \"AA/contracts/FactRegistry.sol\":1723:1796  if (!anyFactRegistered) {... */\n      tag_58\n      jumpi\n        /* \"AA/contracts/FactRegistry.sol\":1781:1785  true */\n      0x01\n        /* \"AA/contracts/FactRegistry.sol\":1761:1785  anyFactRegistered = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      or\n      swap1\n      sstore\n        /* \"AA/contracts/FactRegistry.sol\":1723:1796  if (!anyFactRegistered) {... */\n    tag_58:\n        /* \"AA/contracts/FactRegistry.sol\":1530:1802  function registerFact(bytes32 factHash) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:141   */\n    tag_60:\n        /* \"#utility.yul\":75:85   */\n      0x4e487b71\n        /* \"#utility.yul\":70:73   */\n      0xe0\n        /* \"#utility.yul\":66:86   */\n      shl\n        /* \"#utility.yul\":63:64   */\n      0x00\n        /* \"#utility.yul\":56:87   */\n      mstore\n        /* \"#utility.yul\":106:110   */\n      0x41\n        /* \"#utility.yul\":103:104   */\n      0x04\n        /* \"#utility.yul\":96:111   */\n      mstore\n        /* \"#utility.yul\":130:134   */\n      0x24\n        /* \"#utility.yul\":127:128   */\n      0x00\n        /* \"#utility.yul\":120:135   */\n      revert\n        /* \"#utility.yul\":146:1054   */\n    tag_61:\n        /* \"#utility.yul\":200:205   */\n      0x00\n        /* \"#utility.yul\":253:256   */\n      dup3\n        /* \"#utility.yul\":246:250   */\n      0x1f\n        /* \"#utility.yul\":238:244   */\n      dup4\n        /* \"#utility.yul\":234:251   */\n      add\n        /* \"#utility.yul\":230:257   */\n      slt\n        /* \"#utility.yul\":220:275   */\n      tag_65\n      jumpi\n        /* \"#utility.yul\":271:272   */\n      0x00\n        /* \"#utility.yul\":268:269   */\n      dup1\n        /* \"#utility.yul\":261:273   */\n      revert\n        /* \"#utility.yul\":220:275   */\n    tag_65:\n        /* \"#utility.yul\":307:313   */\n      dup2\n        /* \"#utility.yul\":294:314   */\n      calldataload\n        /* \"#utility.yul\":333:337   */\n      0x20\n        /* \"#utility.yul\":356:374   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":393:395   */\n      dup1\n        /* \"#utility.yul\":389:391   */\n      dup4\n        /* \"#utility.yul\":386:396   */\n      gt\n        /* \"#utility.yul\":383:419   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":399:417   */\n      tag_67\n      tag_60\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":445:447   */\n      dup3\n        /* \"#utility.yul\":442:443   */\n      0x05\n        /* \"#utility.yul\":438:448   */\n      shl\n        /* \"#utility.yul\":477:479   */\n      0x40\n        /* \"#utility.yul\":471:480   */\n      mload\n        /* \"#utility.yul\":540:542   */\n      0x1f\n        /* \"#utility.yul\":536:543   */\n      not\n        /* \"#utility.yul\":531:533   */\n      0x3f\n        /* \"#utility.yul\":527:529   */\n      dup4\n        /* \"#utility.yul\":523:534   */\n      add\n        /* \"#utility.yul\":519:544   */\n      and\n        /* \"#utility.yul\":511:517   */\n      dup2\n        /* \"#utility.yul\":507:545   */\n      add\n        /* \"#utility.yul\":595:601   */\n      dup2\n        /* \"#utility.yul\":583:593   */\n      dup2\n        /* \"#utility.yul\":580:602   */\n      lt\n        /* \"#utility.yul\":575:577   */\n      dup5\n        /* \"#utility.yul\":563:573   */\n      dup3\n        /* \"#utility.yul\":560:578   */\n      gt\n        /* \"#utility.yul\":557:603   */\n      or\n        /* \"#utility.yul\":554:626   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":606:624   */\n      tag_69\n      tag_60\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":642:644   */\n      0x40\n        /* \"#utility.yul\":635:657   */\n      mstore\n        /* \"#utility.yul\":692:710   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":738:742   */\n      0x20\n        /* \"#utility.yul\":770:785   */\n      dup2\n      dup8\n      add\n        /* \"#utility.yul\":766:792   */\n      dup2\n      add\n      swap5\n        /* \"#utility.yul\":726:743   */\n      swap1\n      dup2\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":804:819   */\n      dup8\n      dup6\n      gt\n        /* \"#utility.yul\":801:836   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":832:833   */\n      0x00\n        /* \"#utility.yul\":829:830   */\n      dup1\n        /* \"#utility.yul\":822:834   */\n      revert\n        /* \"#utility.yul\":801:836   */\n    tag_70:\n        /* \"#utility.yul\":868:872   */\n      0x20\n        /* \"#utility.yul\":860:866   */\n      dup8\n        /* \"#utility.yul\":856:873   */\n      add\n        /* \"#utility.yul\":845:873   */\n      swap2\n      pop\n        /* \"#utility.yul\":882:1024   */\n    tag_71:\n        /* \"#utility.yul\":898:904   */\n      dup5\n        /* \"#utility.yul\":893:896   */\n      dup3\n        /* \"#utility.yul\":890:905   */\n      lt\n        /* \"#utility.yul\":882:1024   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":964:981   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":952:982   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1002:1014   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":915:927   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":882:1024   */\n      jump(tag_71)\n    tag_73:\n        /* \"#utility.yul\":1042:1048   */\n      swap8\n        /* \"#utility.yul\":146:1054   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1059:1791   */\n    tag_8:\n        /* \"#utility.yul\":1195:1201   */\n      0x00\n        /* \"#utility.yul\":1203:1209   */\n      dup1\n        /* \"#utility.yul\":1211:1217   */\n      0x00\n        /* \"#utility.yul\":1219:1225   */\n      dup1\n        /* \"#utility.yul\":1272:1275   */\n      0x80\n        /* \"#utility.yul\":1260:1269   */\n      dup6\n        /* \"#utility.yul\":1251:1258   */\n      dup8\n        /* \"#utility.yul\":1247:1270   */\n      sub\n        /* \"#utility.yul\":1243:1276   */\n      slt\n        /* \"#utility.yul\":1240:1293   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":1289:1290   */\n      0x00\n        /* \"#utility.yul\":1286:1287   */\n      dup1\n        /* \"#utility.yul\":1279:1291   */\n      revert\n        /* \"#utility.yul\":1240:1293   */\n    tag_75:\n        /* \"#utility.yul\":1329:1338   */\n      dup5\n        /* \"#utility.yul\":1316:1339   */\n      calldataload\n        /* \"#utility.yul\":1358:1376   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1399:1401   */\n      dup1\n        /* \"#utility.yul\":1391:1397   */\n      dup3\n        /* \"#utility.yul\":1388:1402   */\n      gt\n        /* \"#utility.yul\":1385:1419   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":1415:1416   */\n      0x00\n        /* \"#utility.yul\":1412:1413   */\n      dup1\n        /* \"#utility.yul\":1405:1417   */\n      revert\n        /* \"#utility.yul\":1385:1419   */\n    tag_76:\n        /* \"#utility.yul\":1438:1499   */\n      tag_77\n        /* \"#utility.yul\":1491:1498   */\n      dup9\n        /* \"#utility.yul\":1482:1488   */\n      dup4\n        /* \"#utility.yul\":1471:1480   */\n      dup10\n        /* \"#utility.yul\":1467:1489   */\n      add\n        /* \"#utility.yul\":1438:1499   */\n      tag_61\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1428:1499   */\n      swap6\n      pop\n        /* \"#utility.yul\":1552:1554   */\n      0x20\n        /* \"#utility.yul\":1541:1550   */\n      dup8\n        /* \"#utility.yul\":1537:1555   */\n      add\n        /* \"#utility.yul\":1524:1556   */\n      calldataload\n        /* \"#utility.yul\":1508:1556   */\n      swap2\n      pop\n        /* \"#utility.yul\":1581:1583   */\n      dup1\n        /* \"#utility.yul\":1571:1579   */\n      dup3\n        /* \"#utility.yul\":1568:1584   */\n      gt\n        /* \"#utility.yul\":1565:1601   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":1597:1598   */\n      0x00\n        /* \"#utility.yul\":1594:1595   */\n      dup1\n        /* \"#utility.yul\":1587:1599   */\n      revert\n        /* \"#utility.yul\":1565:1601   */\n    tag_78:\n      pop\n        /* \"#utility.yul\":1620:1683   */\n      tag_79\n        /* \"#utility.yul\":1675:1682   */\n      dup8\n        /* \"#utility.yul\":1664:1672   */\n      dup3\n        /* \"#utility.yul\":1653:1662   */\n      dup9\n        /* \"#utility.yul\":1649:1673   */\n      add\n        /* \"#utility.yul\":1620:1683   */\n      tag_61\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1059:1791   */\n      swap5\n      swap8\n        /* \"#utility.yul\":1610:1683   */\n      swap5\n      swap7\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1730:1732   */\n      0x40\n        /* \"#utility.yul\":1715:1733   */\n      dup4\n      add\n        /* \"#utility.yul\":1702:1734   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":1781:1783   */\n      0x60\n        /* \"#utility.yul\":1766:1784   */\n      add\n        /* \"#utility.yul\":1753:1785   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1059:1791   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1796:1976   */\n    tag_12:\n        /* \"#utility.yul\":1855:1861   */\n      0x00\n        /* \"#utility.yul\":1908:1910   */\n      0x20\n        /* \"#utility.yul\":1896:1905   */\n      dup3\n        /* \"#utility.yul\":1887:1894   */\n      dup5\n        /* \"#utility.yul\":1883:1906   */\n      sub\n        /* \"#utility.yul\":1879:1911   */\n      slt\n        /* \"#utility.yul\":1876:1928   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":1924:1925   */\n      0x00\n        /* \"#utility.yul\":1921:1922   */\n      dup1\n        /* \"#utility.yul\":1914:1926   */\n      revert\n        /* \"#utility.yul\":1876:1928   */\n    tag_81:\n      pop\n        /* \"#utility.yul\":1947:1970   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1796:1976   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2516:2781   */\n    tag_24:\n        /* \"#utility.yul\":2589:2598   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2620:2629   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2637:2652   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2631:2653   */\n      dup5\n      eq\n        /* \"#utility.yul\":2617:2654   */\n      or\n        /* \"#utility.yul\":2607:2775   */\n      tag_44\n      jumpi\n        /* \"#utility.yul\":2697:2707   */\n      0x4e487b71\n        /* \"#utility.yul\":2692:2695   */\n      0xe0\n        /* \"#utility.yul\":2688:2708   */\n      shl\n        /* \"#utility.yul\":2685:2686   */\n      0x00\n        /* \"#utility.yul\":2678:2709   */\n      mstore\n        /* \"#utility.yul\":2732:2736   */\n      0x11\n        /* \"#utility.yul\":2729:2730   */\n      0x04\n        /* \"#utility.yul\":2722:2737   */\n      mstore\n        /* \"#utility.yul\":2760:2764   */\n      0x24\n        /* \"#utility.yul\":2757:2758   */\n      0x00\n        /* \"#utility.yul\":2750:2765   */\n      revert\n        /* \"#utility.yul\":3138:3347   */\n    tag_29:\n        /* \"#utility.yul\":3170:3171   */\n      0x00\n        /* \"#utility.yul\":3196:3197   */\n      dup3\n        /* \"#utility.yul\":3186:3318   */\n      tag_88\n      jumpi\n        /* \"#utility.yul\":3240:3250   */\n      0x4e487b71\n        /* \"#utility.yul\":3235:3238   */\n      0xe0\n        /* \"#utility.yul\":3231:3251   */\n      shl\n        /* \"#utility.yul\":3228:3229   */\n      0x00\n        /* \"#utility.yul\":3221:3252   */\n      mstore\n        /* \"#utility.yul\":3275:3279   */\n      0x12\n        /* \"#utility.yul\":3272:3273   */\n      0x04\n        /* \"#utility.yul\":3265:3280   */\n      mstore\n        /* \"#utility.yul\":3303:3307   */\n      0x24\n        /* \"#utility.yul\":3300:3301   */\n      0x00\n        /* \"#utility.yul\":3293:3308   */\n      revert\n        /* \"#utility.yul\":3186:3318   */\n    tag_88:\n      pop\n        /* \"#utility.yul\":3332:3341   */\n      mod\n      swap1\n        /* \"#utility.yul\":3138:3347   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122086b7d21023747acc14e5ec3e7fe8c0978cb46e2dbbe62593a7ffe7a99358d6c164736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526001805460ff19169055348015610019575f80fd5b50610598806100275f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80633fe317a6146100435780636a93856714610058578063d6354e151461007f575b5f80fd5b61005661005136600461049a565b61008a565b005b61006b610066366004610509565b61026a565b604051901515815260200160405180910390f35b60015460ff1661006b565b60c882106100d05760405162461bcd60e51b815260206004820152600e60248201526d48656967687420746f6f2062696760901b60448201526064015b60405180910390fd5b6100dc60806002610520565b835111156101265760405162461bcd60e51b8152602060048201526017602482015276544f4f5f4d414e595f4d45524b4c455f5155455249455360481b60448201526064016100c7565b600283516101349190610543565b156101795760405162461bcd60e51b81526020600482015260156024820152744f44445f4d45524b4c455f51554555455f53495a4560581b60448201526064016100c7565b6040805160208681018252855186820193600290910491838101915f919084028901016001881b5b818710156101d2578651808552602080890151908601526040978801979094019390811092909217916001016101a1565b60208481016040528a0196506002891b1091909117905080156102305760405162461bcd60e51b8152602060048201526016602482015275494e56414c49445f4d45524b4c455f494e444943455360501b60448201526064016100c7565b5f61023d85878987610282565b90505f818452602086019350602060408602018420905061025d816103b8565b5050505050505050505050565b5f8181526020819052604081205460ff165b92915050565b5f60808211156102ce5760405162461bcd60e51b8152602060048201526017602482015276544f4f5f4d414e595f4d45524b4c455f5155455249455360481b60448201526064016100c7565b60208401604083025f808782015189515b600182111561035d576001821860406020820987860151816020185286604087086002909404858d01528b84015193955060208301928285036103355750601f1990920191858801876040880896508c87015194505b5190525060405f8190206bffffffffffffffffffffffff1916848801528590840892506102df565b929094015191895250925050508281146103b05760405162461bcd60e51b815260206004820152601460248201527324a72b20a624a22fa6a2a925a622afa82927a7a360611b60448201526064016100c7565b949350505050565b5f818152602081905260409020805460ff191660019081179091555460ff166103e8576001805460ff1916811790555b50565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261040e575f80fd5b8135602067ffffffffffffffff8083111561042b5761042b6103eb565b8260051b604051601f19603f83011681018181108482111715610450576104506103eb565b604052938452602081870181019490810192508785111561046f575f80fd5b6020870191505b8482101561048f57813583529183019190830190610476565b979650505050505050565b5f805f80608085870312156104ad575f80fd5b843567ffffffffffffffff808211156104c4575f80fd5b6104d0888389016103ff565b955060208701359150808211156104e5575f80fd5b506104f2878288016103ff565b949794965050505060408301359260600135919050565b5f60208284031215610519575f80fd5b5035919050565b808202811582820484141761027c57634e487b7160e01b5f52601160045260245ffd5b5f8261055d57634e487b7160e01b5f52601260045260245ffd5b50069056fea264697066735822122086b7d21023747acc14e5ec3e7fe8c0978cb46e2dbbe62593a7ffe7a99358d6c164736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x598 DUP1 PUSH2 0x27 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FE317A6 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x6A938567 EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0xD6354E15 EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x51 CALLDATASIZE PUSH1 0x4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B PUSH2 0x66 CALLDATASIZE PUSH1 0x4 PUSH2 0x509 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x6B JUMP JUMPDEST PUSH1 0xC8 DUP3 LT PUSH2 0xD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x48656967687420746F6F20626967 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC PUSH1 0x80 PUSH1 0x2 PUSH2 0x520 JUMP JUMPDEST DUP4 MLOAD GT ISZERO PUSH2 0x126 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x544F4F5F4D414E595F4D45524B4C455F51554552494553 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x2 DUP4 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST ISZERO PUSH2 0x179 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4F44445F4D45524B4C455F51554555455F53495A45 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP7 DUP2 ADD DUP3 MSTORE DUP6 MLOAD DUP7 DUP3 ADD SWAP4 PUSH1 0x2 SWAP1 SWAP2 DIV SWAP2 DUP4 DUP2 ADD SWAP2 PUSH0 SWAP2 SWAP1 DUP5 MUL DUP10 ADD ADD PUSH1 0x1 DUP9 SHL JUMPDEST DUP2 DUP8 LT ISZERO PUSH2 0x1D2 JUMPI DUP7 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP10 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x40 SWAP8 DUP9 ADD SWAP8 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP2 LT SWAP3 SWAP1 SWAP3 OR SWAP2 PUSH1 0x1 ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x20 DUP5 DUP2 ADD PUSH1 0x40 MSTORE DUP11 ADD SWAP7 POP PUSH1 0x2 DUP10 SHL LT SWAP2 SWAP1 SWAP2 OR SWAP1 POP DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x494E56414C49445F4D45524B4C455F494E4449434553 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH0 PUSH2 0x23D DUP6 DUP8 DUP10 DUP8 PUSH2 0x282 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 MSTORE PUSH1 0x20 DUP7 ADD SWAP4 POP PUSH1 0x20 PUSH1 0x40 DUP7 MUL ADD DUP5 KECCAK256 SWAP1 POP PUSH2 0x25D DUP2 PUSH2 0x3B8 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 GT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x544F4F5F4D414E595F4D45524B4C455F51554552494553 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD PUSH1 0x40 DUP4 MUL PUSH0 DUP1 DUP8 DUP3 ADD MLOAD DUP10 MLOAD JUMPDEST PUSH1 0x1 DUP3 GT ISZERO PUSH2 0x35D JUMPI PUSH1 0x1 DUP3 XOR PUSH1 0x40 PUSH1 0x20 DUP3 MULMOD DUP8 DUP7 ADD MLOAD DUP2 PUSH1 0x20 XOR MSTORE DUP7 PUSH1 0x40 DUP8 ADDMOD PUSH1 0x2 SWAP1 SWAP5 DIV DUP6 DUP14 ADD MSTORE DUP12 DUP5 ADD MLOAD SWAP4 SWAP6 POP PUSH1 0x20 DUP4 ADD SWAP3 DUP3 DUP6 SUB PUSH2 0x335 JUMPI POP PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 DUP6 DUP9 ADD DUP8 PUSH1 0x40 DUP9 ADDMOD SWAP7 POP DUP13 DUP8 ADD MLOAD SWAP5 POP JUMPDEST MLOAD SWAP1 MSTORE POP PUSH1 0x40 PUSH0 DUP2 SWAP1 KECCAK256 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 DUP9 ADD MSTORE DUP6 SWAP1 DUP5 ADDMOD SWAP3 POP PUSH2 0x2DF JUMP JUMPDEST SWAP3 SWAP1 SWAP5 ADD MLOAD SWAP2 DUP10 MSTORE POP SWAP3 POP POP POP DUP3 DUP2 EQ PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24A72B20A624A22FA6A2A925A622AFA82927A7A3 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SLOAD PUSH1 0xFF AND PUSH2 0x3E8 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x40E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x42B JUMPI PUSH2 0x42B PUSH2 0x3EB JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP4 DUP5 MSTORE PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD SWAP5 SWAP1 DUP2 ADD SWAP3 POP DUP8 DUP6 GT ISZERO PUSH2 0x46F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP8 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x48F JUMPI DUP2 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x476 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4AD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4D0 DUP9 DUP4 DUP10 ADD PUSH2 0x3FF JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F2 DUP8 DUP3 DUP9 ADD PUSH2 0x3FF JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x519 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x55D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xB7 0xD2 LT 0x23 PUSH21 0x7ACC14E5EC3E7FE8C0978CB46E2DBBE62593A7FFE7 0xA9 SWAP4 PC 0xD6 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "725:4524:4:-:0;;;921:30:0;;;-1:-1:-1;;921:30:0;;;725:4524:4;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_factCheck_36": {
									"entryPoint": null,
									"id": 36,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasRegisteredFact_65": {
									"entryPoint": null,
									"id": 65,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isValid_24": {
									"entryPoint": 618,
									"id": 24,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@registerFact_56": {
									"entryPoint": 952,
									"id": 56,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyMerkle_202": {
									"entryPoint": 138,
									"id": 202,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@verifyMerkle_251": {
									"entryPoint": 642,
									"id": 251,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 1023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_uint256": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 1289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_35f604cd56f65d9ddc21f55b2550bc6cbb1207a3aa8bf69845205c658118a134__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55918135f02c7febf6915eb229bfabd2a0e247e9f1deac0ed56fa5446ec6837e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_60682db7b8382640566339287ec992c4afff51b5da1ce5e92245f7757b3b01b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b35436d8c58f011f194f251c7245f96483087789aa0141b1fdcef1f22922e74a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cfd6507fc701a5f6837637e5302178c4db6be8c9cc233bd7cd6b921a4cfef46e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4399:6",
										"nodeType": "YulBlock",
										"src": "0:4399:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:6",
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:6",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:6",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:6",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nativeSrc": "66:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nativeSrc": "56:31:6",
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nativeSrc": "56:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:6",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:6",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nativeSrc": "96:15:6",
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nativeSrc": "96:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:6",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:6",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nativeSrc": "120:15:6",
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nativeSrc": "120:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nativeSrc": "210:844:6",
													"nodeType": "YulBlock",
													"src": "210:844:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:6",
																"nodeType": "YulBlock",
																"src": "259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:6"
																			},
																			"nativeSrc": "261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:6"
																		},
																		"nativeSrc": "261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:6",
																						"nodeType": "YulLiteral",
																						"src": "246:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:6"
																				},
																				"nativeSrc": "234:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:6"
																		},
																		"nativeSrc": "230:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:6"
																},
																"nativeSrc": "223:35:6",
																"nodeType": "YulFunctionCall",
																"src": "223:35:6"
															},
															"nativeSrc": "220:55:6",
															"nodeType": "YulIf",
															"src": "220:55:6"
														},
														{
															"nativeSrc": "284:30:6",
															"nodeType": "YulVariableDeclaration",
															"src": "284:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "307:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "307:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "294:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "294:12:6"
																},
																"nativeSrc": "294:20:6",
																"nodeType": "YulFunctionCall",
																"src": "294:20:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:6",
																	"nodeType": "YulTypedName",
																	"src": "288:2:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "323:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "323:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "333:4:6",
																"nodeType": "YulLiteral",
																"src": "333:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "327:2:6",
																	"nodeType": "YulTypedName",
																	"src": "327:2:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "346:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "346:28:6",
															"value": {
																"kind": "number",
																"nativeSrc": "356:18:6",
																"nodeType": "YulLiteral",
																"src": "356:18:6",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "350:2:6",
																	"nodeType": "YulTypedName",
																	"src": "350:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "397:22:6",
																"nodeType": "YulBlock",
																"src": "397:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "399:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "399:16:6"
																			},
																			"nativeSrc": "399:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "399:18:6"
																		},
																		"nativeSrc": "399:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "399:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "389:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "389:2:6"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "393:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "393:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "386:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:6"
																},
																"nativeSrc": "386:10:6",
																"nodeType": "YulFunctionCall",
																"src": "386:10:6"
															},
															"nativeSrc": "383:36:6",
															"nodeType": "YulIf",
															"src": "383:36:6"
														},
														{
															"nativeSrc": "428:20:6",
															"nodeType": "YulVariableDeclaration",
															"src": "428:20:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "442:1:6",
																		"nodeType": "YulLiteral",
																		"src": "442:1:6",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "445:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "445:2:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "438:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "438:3:6"
																},
																"nativeSrc": "438:10:6",
																"nodeType": "YulFunctionCall",
																"src": "438:10:6"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "432:2:6",
																	"nodeType": "YulTypedName",
																	"src": "432:2:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "457:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "457:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "477:2:6",
																		"nodeType": "YulLiteral",
																		"src": "477:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "471:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "471:5:6"
																},
																"nativeSrc": "471:9:6",
																"nodeType": "YulFunctionCall",
																"src": "471:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "461:6:6",
																	"nodeType": "YulTypedName",
																	"src": "461:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "489:56:6",
															"nodeType": "YulVariableDeclaration",
															"src": "489:56:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "511:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "511:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_4",
																						"nativeSrc": "527:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "527:2:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "531:2:6",
																						"nodeType": "YulLiteral",
																						"src": "531:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "523:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "523:3:6"
																				},
																				"nativeSrc": "523:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "523:11:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "540:2:6",
																						"nodeType": "YulLiteral",
																						"src": "540:2:6",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "536:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "536:3:6"
																				},
																				"nativeSrc": "536:7:6",
																				"nodeType": "YulFunctionCall",
																				"src": "536:7:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "519:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "519:3:6"
																		},
																		"nativeSrc": "519:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "519:25:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "507:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "507:3:6"
																},
																"nativeSrc": "507:38:6",
																"nodeType": "YulFunctionCall",
																"src": "507:38:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "493:10:6",
																	"nodeType": "YulTypedName",
																	"src": "493:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "604:22:6",
																"nodeType": "YulBlock",
																"src": "604:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "606:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "606:16:6"
																			},
																			"nativeSrc": "606:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "606:18:6"
																		},
																		"nativeSrc": "606:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "606:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "563:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "563:10:6"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "575:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "575:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "560:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "560:2:6"
																		},
																		"nativeSrc": "560:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "560:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "583:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "583:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "595:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "595:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "580:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "580:2:6"
																		},
																		"nativeSrc": "580:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "580:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "557:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "557:2:6"
																},
																"nativeSrc": "557:46:6",
																"nodeType": "YulFunctionCall",
																"src": "557:46:6"
															},
															"nativeSrc": "554:72:6",
															"nodeType": "YulIf",
															"src": "554:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "642:2:6",
																		"nodeType": "YulLiteral",
																		"src": "642:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "646:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "646:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "635:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "635:6:6"
																},
																"nativeSrc": "635:22:6",
																"nodeType": "YulFunctionCall",
																"src": "635:22:6"
															},
															"nativeSrc": "635:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "635:22:6"
														},
														{
															"nativeSrc": "666:17:6",
															"nodeType": "YulVariableDeclaration",
															"src": "666:17:6",
															"value": {
																"name": "memPtr",
																"nativeSrc": "677:6:6",
																"nodeType": "YulIdentifier",
																"src": "677:6:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "670:3:6",
																	"nodeType": "YulTypedName",
																	"src": "670:3:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "699:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "699:6:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "707:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "707:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "692:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "692:6:6"
																},
																"nativeSrc": "692:18:6",
																"nodeType": "YulFunctionCall",
																"src": "692:18:6"
															},
															"nativeSrc": "692:18:6",
															"nodeType": "YulExpressionStatement",
															"src": "692:18:6"
														},
														{
															"nativeSrc": "719:24:6",
															"nodeType": "YulAssignment",
															"src": "719:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "730:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "730:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "738:4:6",
																		"nodeType": "YulLiteral",
																		"src": "738:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "726:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "726:3:6"
																},
																"nativeSrc": "726:17:6",
																"nodeType": "YulFunctionCall",
																"src": "726:17:6"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "719:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "719:3:6"
																}
															]
														},
														{
															"nativeSrc": "752:40:6",
															"nodeType": "YulVariableDeclaration",
															"src": "752:40:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "774:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "774:6:6"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "782:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "782:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "770:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "770:3:6"
																		},
																		"nativeSrc": "770:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "770:15:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "787:4:6",
																		"nodeType": "YulLiteral",
																		"src": "787:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "766:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "766:3:6"
																},
																"nativeSrc": "766:26:6",
																"nodeType": "YulFunctionCall",
																"src": "766:26:6"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "756:6:6",
																	"nodeType": "YulTypedName",
																	"src": "756:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "820:16:6",
																"nodeType": "YulBlock",
																"src": "820:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "829:1:6",
																					"nodeType": "YulLiteral",
																					"src": "829:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "832:1:6",
																					"nodeType": "YulLiteral",
																					"src": "832:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "822:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "822:6:6"
																			},
																			"nativeSrc": "822:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "822:12:6"
																		},
																		"nativeSrc": "822:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "822:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "807:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "807:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "815:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "815:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "804:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "804:2:6"
																},
																"nativeSrc": "804:15:6",
																"nodeType": "YulFunctionCall",
																"src": "804:15:6"
															},
															"nativeSrc": "801:35:6",
															"nodeType": "YulIf",
															"src": "801:35:6"
														},
														{
															"nativeSrc": "845:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "845:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "860:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "860:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "868:4:6",
																		"nodeType": "YulLiteral",
																		"src": "868:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "856:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "856:3:6"
																},
																"nativeSrc": "856:17:6",
																"nodeType": "YulFunctionCall",
																"src": "856:17:6"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "849:3:6",
																	"nodeType": "YulTypedName",
																	"src": "849:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "938:86:6",
																"nodeType": "YulBlock",
																"src": "938:86:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "959:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "959:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "977:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "977:3:6"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nativeSrc": "964:12:6",
																						"nodeType": "YulIdentifier",
																						"src": "964:12:6"
																					},
																					"nativeSrc": "964:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "964:17:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "952:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "952:6:6"
																			},
																			"nativeSrc": "952:30:6",
																			"nodeType": "YulFunctionCall",
																			"src": "952:30:6"
																		},
																		"nativeSrc": "952:30:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "952:30:6"
																	},
																	{
																		"nativeSrc": "995:19:6",
																		"nodeType": "YulAssignment",
																		"src": "995:19:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "1006:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1006:3:6"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "1011:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1011:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1002:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1002:3:6"
																			},
																			"nativeSrc": "1002:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1002:12:6"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "995:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "995:3:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "893:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "893:3:6"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "898:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "898:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "890:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "890:2:6"
																},
																"nativeSrc": "890:15:6",
																"nodeType": "YulFunctionCall",
																"src": "890:15:6"
															},
															"nativeSrc": "882:142:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "906:23:6",
																"nodeType": "YulBlock",
																"src": "906:23:6",
																"statements": [
																	{
																		"nativeSrc": "908:19:6",
																		"nodeType": "YulAssignment",
																		"src": "908:19:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "919:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "919:3:6"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "924:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "924:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "915:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "915:3:6"
																			},
																			"nativeSrc": "915:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "915:12:6"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "908:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "908:3:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "886:3:6",
																"nodeType": "YulBlock",
																"src": "886:3:6",
																"statements": []
															},
															"src": "882:142:6"
														},
														{
															"nativeSrc": "1033:15:6",
															"nodeType": "YulAssignment",
															"src": "1033:15:6",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1042:6:6",
																"nodeType": "YulIdentifier",
																"src": "1042:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1033:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nativeSrc": "146:908:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:6",
														"nodeType": "YulTypedName",
														"src": "184:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:6",
														"nodeType": "YulTypedName",
														"src": "192:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:6",
														"nodeType": "YulTypedName",
														"src": "200:5:6",
														"type": ""
													}
												],
												"src": "146:908:6"
											},
											{
												"body": {
													"nativeSrc": "1230:561:6",
													"nodeType": "YulBlock",
													"src": "1230:561:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1277:16:6",
																"nodeType": "YulBlock",
																"src": "1277:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1286:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1289:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1289:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1279:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1279:6:6"
																			},
																			"nativeSrc": "1279:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1279:12:6"
																		},
																		"nativeSrc": "1279:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1279:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1251:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1251:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1260:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1260:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1247:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1247:3:6"
																		},
																		"nativeSrc": "1247:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1247:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1272:3:6",
																		"nodeType": "YulLiteral",
																		"src": "1272:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1243:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1243:3:6"
																},
																"nativeSrc": "1243:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1243:33:6"
															},
															"nativeSrc": "1240:53:6",
															"nodeType": "YulIf",
															"src": "1240:53:6"
														},
														{
															"nativeSrc": "1302:37:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1302:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1329:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1329:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1316:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1316:12:6"
																},
																"nativeSrc": "1316:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1316:23:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1306:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1306:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1348:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1348:28:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1358:18:6",
																"nodeType": "YulLiteral",
																"src": "1358:18:6",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1352:2:6",
																	"nodeType": "YulTypedName",
																	"src": "1352:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1403:16:6",
																"nodeType": "YulBlock",
																"src": "1403:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1412:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1412:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1415:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1415:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1405:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1405:6:6"
																			},
																			"nativeSrc": "1405:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1405:12:6"
																		},
																		"nativeSrc": "1405:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1405:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1391:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1391:6:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1399:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1399:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1388:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1388:2:6"
																},
																"nativeSrc": "1388:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1388:14:6"
															},
															"nativeSrc": "1385:34:6",
															"nodeType": "YulIf",
															"src": "1385:34:6"
														},
														{
															"nativeSrc": "1428:71:6",
															"nodeType": "YulAssignment",
															"src": "1428:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1471:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1471:9:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1482:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1482:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1467:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1467:3:6"
																		},
																		"nativeSrc": "1467:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1467:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1491:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1491:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "1438:28:6",
																	"nodeType": "YulIdentifier",
																	"src": "1438:28:6"
																},
																"nativeSrc": "1438:61:6",
																"nodeType": "YulFunctionCall",
																"src": "1438:61:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1428:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:6"
																}
															]
														},
														{
															"nativeSrc": "1508:48:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1508:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1541:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1541:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1552:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1552:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1537:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1537:3:6"
																		},
																		"nativeSrc": "1537:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1537:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1524:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1524:12:6"
																},
																"nativeSrc": "1524:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1524:32:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1512:8:6",
																	"nodeType": "YulTypedName",
																	"src": "1512:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1585:16:6",
																"nodeType": "YulBlock",
																"src": "1585:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1594:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1594:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1597:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1597:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1587:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1587:6:6"
																			},
																			"nativeSrc": "1587:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1587:12:6"
																		},
																		"nativeSrc": "1587:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1587:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1571:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1571:8:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1581:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1581:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1568:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1568:2:6"
																},
																"nativeSrc": "1568:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1568:16:6"
															},
															"nativeSrc": "1565:36:6",
															"nodeType": "YulIf",
															"src": "1565:36:6"
														},
														{
															"nativeSrc": "1610:73:6",
															"nodeType": "YulAssignment",
															"src": "1610:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1653:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1653:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1664:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "1664:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1649:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1649:3:6"
																		},
																		"nativeSrc": "1649:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1649:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1675:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1675:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "1620:28:6",
																	"nodeType": "YulIdentifier",
																	"src": "1620:28:6"
																},
																"nativeSrc": "1620:63:6",
																"nodeType": "YulFunctionCall",
																"src": "1620:63:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1610:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1610:6:6"
																}
															]
														},
														{
															"nativeSrc": "1692:42:6",
															"nodeType": "YulAssignment",
															"src": "1692:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1719:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1719:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1730:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1730:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1715:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1715:3:6"
																		},
																		"nativeSrc": "1715:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1715:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1702:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1702:12:6"
																},
																"nativeSrc": "1702:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1702:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1692:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1692:6:6"
																}
															]
														},
														{
															"nativeSrc": "1743:42:6",
															"nodeType": "YulAssignment",
															"src": "1743:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1770:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1770:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1781:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1781:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1766:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1766:3:6"
																		},
																		"nativeSrc": "1766:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1766:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1753:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1753:12:6"
																},
																"nativeSrc": "1753:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1753:32:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1743:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1743:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_uint256",
												"nativeSrc": "1059:732:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1172:9:6",
														"nodeType": "YulTypedName",
														"src": "1172:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1183:7:6",
														"nodeType": "YulTypedName",
														"src": "1183:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1195:6:6",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1203:6:6",
														"nodeType": "YulTypedName",
														"src": "1203:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1211:6:6",
														"nodeType": "YulTypedName",
														"src": "1211:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1219:6:6",
														"nodeType": "YulTypedName",
														"src": "1219:6:6",
														"type": ""
													}
												],
												"src": "1059:732:6"
											},
											{
												"body": {
													"nativeSrc": "1866:110:6",
													"nodeType": "YulBlock",
													"src": "1866:110:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1912:16:6",
																"nodeType": "YulBlock",
																"src": "1912:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1921:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1921:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1924:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1924:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1914:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1914:6:6"
																			},
																			"nativeSrc": "1914:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1914:12:6"
																		},
																		"nativeSrc": "1914:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1914:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1887:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1887:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1896:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1896:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1883:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1883:3:6"
																		},
																		"nativeSrc": "1883:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1883:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1908:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1908:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1879:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1879:3:6"
																},
																"nativeSrc": "1879:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1879:32:6"
															},
															"nativeSrc": "1876:52:6",
															"nodeType": "YulIf",
															"src": "1876:52:6"
														},
														{
															"nativeSrc": "1937:33:6",
															"nodeType": "YulAssignment",
															"src": "1937:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1960:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1960:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1947:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1947:12:6"
																},
																"nativeSrc": "1947:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1947:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1937:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1937:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1796:180:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1832:9:6",
														"nodeType": "YulTypedName",
														"src": "1832:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1843:7:6",
														"nodeType": "YulTypedName",
														"src": "1843:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1855:6:6",
														"nodeType": "YulTypedName",
														"src": "1855:6:6",
														"type": ""
													}
												],
												"src": "1796:180:6"
											},
											{
												"body": {
													"nativeSrc": "2076:92:6",
													"nodeType": "YulBlock",
													"src": "2076:92:6",
													"statements": [
														{
															"nativeSrc": "2086:26:6",
															"nodeType": "YulAssignment",
															"src": "2086:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2098:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2098:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2109:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2109:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2094:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:6"
																},
																"nativeSrc": "2094:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2094:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2086:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2086:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2128:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2128:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "2153:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2153:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2146:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2146:6:6"
																				},
																				"nativeSrc": "2146:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2146:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2139:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2139:6:6"
																		},
																		"nativeSrc": "2139:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2139:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2121:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2121:6:6"
																},
																"nativeSrc": "2121:41:6",
																"nodeType": "YulFunctionCall",
																"src": "2121:41:6"
															},
															"nativeSrc": "2121:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "2121:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1981:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2045:9:6",
														"nodeType": "YulTypedName",
														"src": "2045:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2056:6:6",
														"nodeType": "YulTypedName",
														"src": "2056:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2067:4:6",
														"nodeType": "YulTypedName",
														"src": "2067:4:6",
														"type": ""
													}
												],
												"src": "1981:187:6"
											},
											{
												"body": {
													"nativeSrc": "2347:164:6",
													"nodeType": "YulBlock",
													"src": "2347:164:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2364:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2364:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2375:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2375:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2357:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2357:6:6"
																},
																"nativeSrc": "2357:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2357:21:6"
															},
															"nativeSrc": "2357:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "2357:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2398:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2398:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2409:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2409:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2394:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2394:3:6"
																		},
																		"nativeSrc": "2394:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2394:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2414:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2414:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2387:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:6:6"
																},
																"nativeSrc": "2387:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:30:6"
															},
															"nativeSrc": "2387:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2437:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2437:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2448:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2448:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2433:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2433:3:6"
																		},
																		"nativeSrc": "2433:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2433:18:6"
																	},
																	{
																		"hexValue": "48656967687420746f6f20626967",
																		"kind": "string",
																		"nativeSrc": "2453:16:6",
																		"nodeType": "YulLiteral",
																		"src": "2453:16:6",
																		"type": "",
																		"value": "Height too big"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2426:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2426:6:6"
																},
																"nativeSrc": "2426:44:6",
																"nodeType": "YulFunctionCall",
																"src": "2426:44:6"
															},
															"nativeSrc": "2426:44:6",
															"nodeType": "YulExpressionStatement",
															"src": "2426:44:6"
														},
														{
															"nativeSrc": "2479:26:6",
															"nodeType": "YulAssignment",
															"src": "2479:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2491:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2491:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2502:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2502:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2487:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2487:3:6"
																},
																"nativeSrc": "2487:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2487:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2479:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2479:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55918135f02c7febf6915eb229bfabd2a0e247e9f1deac0ed56fa5446ec6837e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2173:338:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2324:9:6",
														"nodeType": "YulTypedName",
														"src": "2324:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2338:4:6",
														"nodeType": "YulTypedName",
														"src": "2338:4:6",
														"type": ""
													}
												],
												"src": "2173:338:6"
											},
											{
												"body": {
													"nativeSrc": "2568:213:6",
													"nodeType": "YulBlock",
													"src": "2568:213:6",
													"statements": [
														{
															"nativeSrc": "2578:20:6",
															"nodeType": "YulAssignment",
															"src": "2578:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2593:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2593:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2596:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2596:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2589:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2589:3:6"
																},
																"nativeSrc": "2589:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2589:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2578:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2578:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2664:111:6",
																"nodeType": "YulBlock",
																"src": "2664:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2685:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2685:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2692:3:6",
																							"nodeType": "YulLiteral",
																							"src": "2692:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2697:10:6",
																							"nodeType": "YulLiteral",
																							"src": "2697:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2688:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2688:3:6"
																					},
																					"nativeSrc": "2688:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2688:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2678:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2678:6:6"
																			},
																			"nativeSrc": "2678:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2678:31:6"
																		},
																		"nativeSrc": "2678:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2678:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2729:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2729:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2732:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2732:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2722:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2722:6:6"
																			},
																			"nativeSrc": "2722:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2722:15:6"
																		},
																		"nativeSrc": "2722:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2722:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2757:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2757:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2760:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2760:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2750:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2750:6:6"
																			},
																			"nativeSrc": "2750:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2750:15:6"
																		},
																		"nativeSrc": "2750:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2750:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2627:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "2627:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2620:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2620:6:6"
																				},
																				"nativeSrc": "2620:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2620:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2634:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "2634:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2641:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "2641:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2650:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "2650:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2637:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2637:3:6"
																						},
																						"nativeSrc": "2637:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2637:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2631:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2631:2:6"
																				},
																				"nativeSrc": "2631:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2631:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2617:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2617:2:6"
																		},
																		"nativeSrc": "2617:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2617:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2610:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2610:6:6"
																},
																"nativeSrc": "2610:45:6",
																"nodeType": "YulFunctionCall",
																"src": "2610:45:6"
															},
															"nativeSrc": "2607:168:6",
															"nodeType": "YulIf",
															"src": "2607:168:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2516:265:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2547:1:6",
														"nodeType": "YulTypedName",
														"src": "2547:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2550:1:6",
														"nodeType": "YulTypedName",
														"src": "2550:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2556:7:6",
														"nodeType": "YulTypedName",
														"src": "2556:7:6",
														"type": ""
													}
												],
												"src": "2516:265:6"
											},
											{
												"body": {
													"nativeSrc": "2960:173:6",
													"nodeType": "YulBlock",
													"src": "2960:173:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2977:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2977:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2988:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2988:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2970:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2970:6:6"
																},
																"nativeSrc": "2970:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2970:21:6"
															},
															"nativeSrc": "2970:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "2970:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3011:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3011:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3022:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3022:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3007:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3007:3:6"
																		},
																		"nativeSrc": "3007:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3007:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3027:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3027:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3000:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3000:6:6"
																},
																"nativeSrc": "3000:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3000:30:6"
															},
															"nativeSrc": "3000:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3000:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3050:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3050:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3061:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3061:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3046:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3046:3:6"
																		},
																		"nativeSrc": "3046:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3046:18:6"
																	},
																	{
																		"hexValue": "544f4f5f4d414e595f4d45524b4c455f51554552494553",
																		"kind": "string",
																		"nativeSrc": "3066:25:6",
																		"nodeType": "YulLiteral",
																		"src": "3066:25:6",
																		"type": "",
																		"value": "TOO_MANY_MERKLE_QUERIES"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3039:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:6"
																},
																"nativeSrc": "3039:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3039:53:6"
															},
															"nativeSrc": "3039:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "3039:53:6"
														},
														{
															"nativeSrc": "3101:26:6",
															"nodeType": "YulAssignment",
															"src": "3101:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3113:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3113:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3124:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3124:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3109:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3109:3:6"
																},
																"nativeSrc": "3109:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3109:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3101:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3101:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_35f604cd56f65d9ddc21f55b2550bc6cbb1207a3aa8bf69845205c658118a134__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2786:347:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2937:9:6",
														"nodeType": "YulTypedName",
														"src": "2937:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2951:4:6",
														"nodeType": "YulTypedName",
														"src": "2951:4:6",
														"type": ""
													}
												],
												"src": "2786:347:6"
											},
											{
												"body": {
													"nativeSrc": "3176:171:6",
													"nodeType": "YulBlock",
													"src": "3176:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3207:111:6",
																"nodeType": "YulBlock",
																"src": "3207:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3228:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3228:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3235:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3235:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3240:10:6",
																							"nodeType": "YulLiteral",
																							"src": "3240:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3231:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3231:3:6"
																					},
																					"nativeSrc": "3231:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3231:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3221:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3221:6:6"
																			},
																			"nativeSrc": "3221:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3221:31:6"
																		},
																		"nativeSrc": "3221:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3221:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3272:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3272:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3275:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3275:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3265:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3265:6:6"
																			},
																			"nativeSrc": "3265:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3265:15:6"
																		},
																		"nativeSrc": "3265:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3265:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3300:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3300:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3303:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3303:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3293:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3293:6:6"
																			},
																			"nativeSrc": "3293:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3293:15:6"
																		},
																		"nativeSrc": "3293:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3293:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3196:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3196:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3189:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3189:6:6"
																},
																"nativeSrc": "3189:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3189:9:6"
															},
															"nativeSrc": "3186:132:6",
															"nodeType": "YulIf",
															"src": "3186:132:6"
														},
														{
															"nativeSrc": "3327:14:6",
															"nodeType": "YulAssignment",
															"src": "3327:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3336:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3336:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3339:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3339:1:6"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "3332:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3332:3:6"
																},
																"nativeSrc": "3332:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3332:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3327:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3327:1:6"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "3138:209:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3161:1:6",
														"nodeType": "YulTypedName",
														"src": "3161:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3164:1:6",
														"nodeType": "YulTypedName",
														"src": "3164:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3170:1:6",
														"nodeType": "YulTypedName",
														"src": "3170:1:6",
														"type": ""
													}
												],
												"src": "3138:209:6"
											},
											{
												"body": {
													"nativeSrc": "3526:171:6",
													"nodeType": "YulBlock",
													"src": "3526:171:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3543:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3543:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3554:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3554:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3536:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3536:6:6"
																},
																"nativeSrc": "3536:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3536:21:6"
															},
															"nativeSrc": "3536:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3536:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3577:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3577:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3588:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3588:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3573:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3573:3:6"
																		},
																		"nativeSrc": "3573:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3573:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3593:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3593:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3566:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3566:6:6"
																},
																"nativeSrc": "3566:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3566:30:6"
															},
															"nativeSrc": "3566:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3566:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3616:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3616:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3627:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3627:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3612:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3612:3:6"
																		},
																		"nativeSrc": "3612:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3612:18:6"
																	},
																	{
																		"hexValue": "4f44445f4d45524b4c455f51554555455f53495a45",
																		"kind": "string",
																		"nativeSrc": "3632:23:6",
																		"nodeType": "YulLiteral",
																		"src": "3632:23:6",
																		"type": "",
																		"value": "ODD_MERKLE_QUEUE_SIZE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3605:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:6"
																},
																"nativeSrc": "3605:51:6",
																"nodeType": "YulFunctionCall",
																"src": "3605:51:6"
															},
															"nativeSrc": "3605:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "3605:51:6"
														},
														{
															"nativeSrc": "3665:26:6",
															"nodeType": "YulAssignment",
															"src": "3665:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3677:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3677:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3688:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3688:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3673:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3673:3:6"
																},
																"nativeSrc": "3673:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3673:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3665:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3665:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b35436d8c58f011f194f251c7245f96483087789aa0141b1fdcef1f22922e74a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3352:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3503:9:6",
														"nodeType": "YulTypedName",
														"src": "3503:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3517:4:6",
														"nodeType": "YulTypedName",
														"src": "3517:4:6",
														"type": ""
													}
												],
												"src": "3352:345:6"
											},
											{
												"body": {
													"nativeSrc": "3876:172:6",
													"nodeType": "YulBlock",
													"src": "3876:172:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3893:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3893:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3904:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3904:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3886:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3886:6:6"
																},
																"nativeSrc": "3886:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3886:21:6"
															},
															"nativeSrc": "3886:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3886:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3927:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3927:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3938:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3938:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3923:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3923:3:6"
																		},
																		"nativeSrc": "3923:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3923:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3943:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3943:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3916:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3916:6:6"
																},
																"nativeSrc": "3916:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3916:30:6"
															},
															"nativeSrc": "3916:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3916:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3966:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3966:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3977:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3977:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3962:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3962:3:6"
																		},
																		"nativeSrc": "3962:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3962:18:6"
																	},
																	{
																		"hexValue": "494e56414c49445f4d45524b4c455f494e4449434553",
																		"kind": "string",
																		"nativeSrc": "3982:24:6",
																		"nodeType": "YulLiteral",
																		"src": "3982:24:6",
																		"type": "",
																		"value": "INVALID_MERKLE_INDICES"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3955:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:6"
																},
																"nativeSrc": "3955:52:6",
																"nodeType": "YulFunctionCall",
																"src": "3955:52:6"
															},
															"nativeSrc": "3955:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "3955:52:6"
														},
														{
															"nativeSrc": "4016:26:6",
															"nodeType": "YulAssignment",
															"src": "4016:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4028:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4028:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4039:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4039:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4024:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4024:3:6"
																},
																"nativeSrc": "4024:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4024:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4016:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4016:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cfd6507fc701a5f6837637e5302178c4db6be8c9cc233bd7cd6b921a4cfef46e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3702:346:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3853:9:6",
														"nodeType": "YulTypedName",
														"src": "3853:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3867:4:6",
														"nodeType": "YulTypedName",
														"src": "3867:4:6",
														"type": ""
													}
												],
												"src": "3702:346:6"
											},
											{
												"body": {
													"nativeSrc": "4227:170:6",
													"nodeType": "YulBlock",
													"src": "4227:170:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4244:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4244:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4255:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4255:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4237:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4237:6:6"
																},
																"nativeSrc": "4237:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4237:21:6"
															},
															"nativeSrc": "4237:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4237:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4278:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4278:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4289:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4289:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4274:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4274:3:6"
																		},
																		"nativeSrc": "4274:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4274:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4294:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4294:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4267:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4267:6:6"
																},
																"nativeSrc": "4267:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4267:30:6"
															},
															"nativeSrc": "4267:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4267:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4317:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4317:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4328:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4328:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4313:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4313:3:6"
																		},
																		"nativeSrc": "4313:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4313:18:6"
																	},
																	{
																		"hexValue": "494e56414c49445f4d45524b4c455f50524f4f46",
																		"kind": "string",
																		"nativeSrc": "4333:22:6",
																		"nodeType": "YulLiteral",
																		"src": "4333:22:6",
																		"type": "",
																		"value": "INVALID_MERKLE_PROOF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4306:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4306:6:6"
																},
																"nativeSrc": "4306:50:6",
																"nodeType": "YulFunctionCall",
																"src": "4306:50:6"
															},
															"nativeSrc": "4306:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "4306:50:6"
														},
														{
															"nativeSrc": "4365:26:6",
															"nodeType": "YulAssignment",
															"src": "4365:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4377:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4377:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4388:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4388:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4373:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4373:3:6"
																},
																"nativeSrc": "4373:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4373:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4365:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4365:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60682db7b8382640566339287ec992c4afff51b5da1ce5e92245f7757b3b01b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4053:344:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4204:9:6",
														"nodeType": "YulTypedName",
														"src": "4204:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4218:4:6",
														"nodeType": "YulTypedName",
														"src": "4218:4:6",
														"type": ""
													}
												],
												"src": "4053:344:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := 0xffffffffffffffff\n        if gt(_1, _3) { panic_error_0x41() }\n        let _4 := shl(5, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_4, 63), not(31)))\n        if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, 0x20)\n        let srcEnd := add(add(offset, _4), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_55918135f02c7febf6915eb229bfabd2a0e247e9f1deac0ed56fa5446ec6837e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Height too big\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_35f604cd56f65d9ddc21f55b2550bc6cbb1207a3aa8bf69845205c658118a134__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"TOO_MANY_MERKLE_QUERIES\")\n        tail := add(headStart, 96)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_b35436d8c58f011f194f251c7245f96483087789aa0141b1fdcef1f22922e74a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ODD_MERKLE_QUEUE_SIZE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cfd6507fc701a5f6837637e5302178c4db6be8c9cc233bd7cd6b921a4cfef46e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"INVALID_MERKLE_INDICES\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_60682db7b8382640566339287ec992c4afff51b5da1ce5e92245f7757b3b01b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"INVALID_MERKLE_PROOF\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80633fe317a6146100435780636a93856714610058578063d6354e151461007f575b5f80fd5b61005661005136600461049a565b61008a565b005b61006b610066366004610509565b61026a565b604051901515815260200160405180910390f35b60015460ff1661006b565b60c882106100d05760405162461bcd60e51b815260206004820152600e60248201526d48656967687420746f6f2062696760901b60448201526064015b60405180910390fd5b6100dc60806002610520565b835111156101265760405162461bcd60e51b8152602060048201526017602482015276544f4f5f4d414e595f4d45524b4c455f5155455249455360481b60448201526064016100c7565b600283516101349190610543565b156101795760405162461bcd60e51b81526020600482015260156024820152744f44445f4d45524b4c455f51554555455f53495a4560581b60448201526064016100c7565b6040805160208681018252855186820193600290910491838101915f919084028901016001881b5b818710156101d2578651808552602080890151908601526040978801979094019390811092909217916001016101a1565b60208481016040528a0196506002891b1091909117905080156102305760405162461bcd60e51b8152602060048201526016602482015275494e56414c49445f4d45524b4c455f494e444943455360501b60448201526064016100c7565b5f61023d85878987610282565b90505f818452602086019350602060408602018420905061025d816103b8565b5050505050505050505050565b5f8181526020819052604081205460ff165b92915050565b5f60808211156102ce5760405162461bcd60e51b8152602060048201526017602482015276544f4f5f4d414e595f4d45524b4c455f5155455249455360481b60448201526064016100c7565b60208401604083025f808782015189515b600182111561035d576001821860406020820987860151816020185286604087086002909404858d01528b84015193955060208301928285036103355750601f1990920191858801876040880896508c87015194505b5190525060405f8190206bffffffffffffffffffffffff1916848801528590840892506102df565b929094015191895250925050508281146103b05760405162461bcd60e51b815260206004820152601460248201527324a72b20a624a22fa6a2a925a622afa82927a7a360611b60448201526064016100c7565b949350505050565b5f818152602081905260409020805460ff191660019081179091555460ff166103e8576001805460ff1916811790555b50565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261040e575f80fd5b8135602067ffffffffffffffff8083111561042b5761042b6103eb565b8260051b604051601f19603f83011681018181108482111715610450576104506103eb565b604052938452602081870181019490810192508785111561046f575f80fd5b6020870191505b8482101561048f57813583529183019190830190610476565b979650505050505050565b5f805f80608085870312156104ad575f80fd5b843567ffffffffffffffff808211156104c4575f80fd5b6104d0888389016103ff565b955060208701359150808211156104e5575f80fd5b506104f2878288016103ff565b949794965050505060408301359260600135919050565b5f60208284031215610519575f80fd5b5035919050565b808202811582820484141761027c57634e487b7160e01b5f52601160045260245ffd5b5f8261055d57634e487b7160e01b5f52601260045260245ffd5b50069056fea264697066735822122086b7d21023747acc14e5ec3e7fe8c0978cb46e2dbbe62593a7ffe7a99358d6c164736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FE317A6 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x6A938567 EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0xD6354E15 EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x51 CALLDATASIZE PUSH1 0x4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B PUSH2 0x66 CALLDATASIZE PUSH1 0x4 PUSH2 0x509 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x6B JUMP JUMPDEST PUSH1 0xC8 DUP3 LT PUSH2 0xD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x48656967687420746F6F20626967 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC PUSH1 0x80 PUSH1 0x2 PUSH2 0x520 JUMP JUMPDEST DUP4 MLOAD GT ISZERO PUSH2 0x126 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x544F4F5F4D414E595F4D45524B4C455F51554552494553 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x2 DUP4 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST ISZERO PUSH2 0x179 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4F44445F4D45524B4C455F51554555455F53495A45 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP7 DUP2 ADD DUP3 MSTORE DUP6 MLOAD DUP7 DUP3 ADD SWAP4 PUSH1 0x2 SWAP1 SWAP2 DIV SWAP2 DUP4 DUP2 ADD SWAP2 PUSH0 SWAP2 SWAP1 DUP5 MUL DUP10 ADD ADD PUSH1 0x1 DUP9 SHL JUMPDEST DUP2 DUP8 LT ISZERO PUSH2 0x1D2 JUMPI DUP7 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP10 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x40 SWAP8 DUP9 ADD SWAP8 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP2 LT SWAP3 SWAP1 SWAP3 OR SWAP2 PUSH1 0x1 ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x20 DUP5 DUP2 ADD PUSH1 0x40 MSTORE DUP11 ADD SWAP7 POP PUSH1 0x2 DUP10 SHL LT SWAP2 SWAP1 SWAP2 OR SWAP1 POP DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x494E56414C49445F4D45524B4C455F494E4449434553 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH0 PUSH2 0x23D DUP6 DUP8 DUP10 DUP8 PUSH2 0x282 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 MSTORE PUSH1 0x20 DUP7 ADD SWAP4 POP PUSH1 0x20 PUSH1 0x40 DUP7 MUL ADD DUP5 KECCAK256 SWAP1 POP PUSH2 0x25D DUP2 PUSH2 0x3B8 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 GT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x544F4F5F4D414E595F4D45524B4C455F51554552494553 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD PUSH1 0x40 DUP4 MUL PUSH0 DUP1 DUP8 DUP3 ADD MLOAD DUP10 MLOAD JUMPDEST PUSH1 0x1 DUP3 GT ISZERO PUSH2 0x35D JUMPI PUSH1 0x1 DUP3 XOR PUSH1 0x40 PUSH1 0x20 DUP3 MULMOD DUP8 DUP7 ADD MLOAD DUP2 PUSH1 0x20 XOR MSTORE DUP7 PUSH1 0x40 DUP8 ADDMOD PUSH1 0x2 SWAP1 SWAP5 DIV DUP6 DUP14 ADD MSTORE DUP12 DUP5 ADD MLOAD SWAP4 SWAP6 POP PUSH1 0x20 DUP4 ADD SWAP3 DUP3 DUP6 SUB PUSH2 0x335 JUMPI POP PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 DUP6 DUP9 ADD DUP8 PUSH1 0x40 DUP9 ADDMOD SWAP7 POP DUP13 DUP8 ADD MLOAD SWAP5 POP JUMPDEST MLOAD SWAP1 MSTORE POP PUSH1 0x40 PUSH0 DUP2 SWAP1 KECCAK256 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 DUP9 ADD MSTORE DUP6 SWAP1 DUP5 ADDMOD SWAP3 POP PUSH2 0x2DF JUMP JUMPDEST SWAP3 SWAP1 SWAP5 ADD MLOAD SWAP2 DUP10 MSTORE POP SWAP3 POP POP POP DUP3 DUP2 EQ PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24A72B20A624A22FA6A2A925A622AFA82927A7A3 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SLOAD PUSH1 0xFF AND PUSH2 0x3E8 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x40E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x42B JUMPI PUSH2 0x42B PUSH2 0x3EB JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP4 DUP5 MSTORE PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD SWAP5 SWAP1 DUP2 ADD SWAP3 POP DUP8 DUP6 GT ISZERO PUSH2 0x46F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP8 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x48F JUMPI DUP2 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x476 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4AD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4D0 DUP9 DUP4 DUP10 ADD PUSH2 0x3FF JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F2 DUP8 DUP3 DUP9 ADD PUSH2 0x3FF JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x519 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x55D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xB7 0xD2 LT 0x23 PUSH21 0x7ACC14E5EC3E7FE8C0978CB46E2DBBE62593A7FFE7 0xA9 SWAP4 PC 0xD6 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "725:4524:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1211:4036;;;;;;:::i;:::-;;:::i;:::-;;1014:109:0;;;;;;:::i;:::-;;:::i;:::-;;;2146:14:6;;2139:22;2121:41;;2109:2;2094:18;1014:109:0;;;;;;;1880:108;1964:17;;;;1880:108;;1211:4036:4;1500:3;1491:6;:12;1483:39;;;;-1:-1:-1;;;1483:39:4;;2375:2:6;1483:39:4;;;2357:21:6;2414:2;2394:18;;;2387:30;-1:-1:-1;;;2433:18:6;;;2426:44;2487:18;;1483:39:4;;;;;;;;;1583:33;761:3:3;1615:1:4;1583:33;:::i;:::-;1554:18;:25;:62;;1533:132;;;;-1:-1:-1;;;1533:132:4;;2988:2:6;1533:132:4;;;2970:21:6;3027:2;3007:18;;;3000:30;-1:-1:-1;;;3046:18:6;;;3039:53;3109:18;;1533:132:4;2786:347:6;1533:132:4;1711:1;1683:18;:25;:29;;;;:::i;:::-;:34;1675:68;;;;-1:-1:-1;;;1675:68:4;;3554:2:6;1675:68:4;;;3536:21:6;3593:2;3573:18;;;3566:30;-1:-1:-1;;;3612:18:6;;;3605:51;3673:18;;1675:68:4;3352:345:6;1675:68:4;2127:4;2121:11;;2036:4;2020:21;;;2293:33;;2535:25;;2439:29;;;;2562:3;2531:35;;;;2902:21;;;;1754:22;;2761:40;;;2708:107;;;3245:1;3233:14;;3260:781;3300:24;3284:14;3281:44;3260:781;;;3375:21;;3717:29;;;3863:4;3843:25;;;3837:32;3791:24;;;3763:124;3941:4;3981:46;;;;3922:24;;;;3493:25;;;3480:39;;;;;3627:1;3615:14;3260:781;;;4434:4;4591:24;;;4585:4;4578:38;4410:29;;;-1:-1:-1;4337:1:4;4325:14;;-1:-1:-1;4294:47:4;;;;;-1:-1:-1;4644:13:4;;4636:48;;;;-1:-1:-1;;;4636:48:4;;3904:2:6;4636:48:4;;;3886:21:6;3943:2;3923:18;;;3916:30;-1:-1:-1;;;3962:18:6;;;3955:52;4024:18;;4636:48:4;3702:346:6;4636:48:4;4694:15;4712:131;4738:10;4762:14;4798:12;4825:8;4712:12;:131::i;:::-;4694:149;;4854:16;5022:7;5007:13;5000:30;5112:4;5100:10;5096:21;5079:38;;5192:4;5185;5175:8;5171:19;5167:30;5152:13;5142:56;5130:68;;5218:22;5231:8;5218:12;:22::i;:::-;1382:3865;;;;;;;1211:4036;;;;:::o;1014:109:0:-;1077:4;1499:18;;;;;;;;;;;;;1100:16;1093:23;1014:109;-1:-1:-1;;1014:109:0:o;1996:3946:5:-;2159:12;761:3:3;2191:1:5;:34;;2183:70;;;;-1:-1:-1;;;2183:70:5;;2988:2:6;2183:70:5;;;2970:21:6;3027:2;3007:18;;;3000:30;-1:-1:-1;;;3046:18:6;;;3039:53;3109:18;;2183:70:5;2786:347:6;2183:70:5;2500:19;2490:8;2486:34;2557:25;2554:1;2550:33;2658:1;2685;2798:8;2791:5;2787:20;2781:27;2843:10;2837:17;2901:2823;2932:1;2925:5;2922:12;2901:2823;;;3001:1;2994:5;2990:13;3233:29;3187:24;3153:12;3125:155;3569:9;3562:5;3558:21;3552:28;3535:14;3529:4;3525:25;3518:63;3648:9;3621:25;3614:5;3607:51;4376:1;4365:13;;;4343:20;;;4336:43;4498:20;;;4492:27;3598:60;;-1:-1:-1;3965:24:5;3951:39;;;4539:23;;;4536:731;;-1:-1:-1;;;4774:39:5;;;;4670:21;;;4884:9;4857:25;4674:5;4843:51;4834:60;;5239:8;5232:5;5228:20;5222:27;5213:36;;4536:731;5308:17;5285:41;;-1:-1:-1;5563:29:5;5557:4;5547:46;;;-1:-1:-1;;5477:138:5;5434:21;;;5406:227;5700:9;;5438:5;5659:51;5650:60;;2901:2823;;;5751:21;;;;5745:28;5843;;;-1:-1:-1;5745:28:5;-1:-1:-1;;;5898:12:5;;;5890:45;;;;-1:-1:-1;;;5890:45:5;;4255:2:6;5890:45:5;;;4237:21:6;4294:2;4274:18;;;4267:30;-1:-1:-1;;;4313:18:6;;;4306:50;4373:18;;5890:45:5;4053:344:6;5890:45:5;1996:3946;;;;;;:::o;1530:272:0:-;1651:12;:22;;;;;;;;;;:29;;-1:-1:-1;;1651:29:0;1676:4;1651:29;;;;;;1728:17;1651:29;1728:17;1723:73;;1781:4;1761:24;;-1:-1:-1;;1761:24:0;;;;;1723:73;1530:272;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:908;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;307:6;294:20;333:4;356:18;393:2;389;386:10;383:36;;;399:18;;:::i;:::-;445:2;442:1;438:10;477:2;471:9;540:2;536:7;531:2;527;523:11;519:25;511:6;507:38;595:6;583:10;580:22;575:2;563:10;560:18;557:46;554:72;;;606:18;;:::i;:::-;642:2;635:22;692:18;;;738:4;770:15;;;766:26;;;726:17;;;;-1:-1:-1;804:15:6;;;801:35;;;832:1;829;822:12;801:35;868:4;860:6;856:17;845:28;;882:142;898:6;893:3;890:15;882:142;;;964:17;;952:30;;1002:12;;;;915;;;;882:142;;;1042:6;146:908;-1:-1:-1;;;;;;;146:908:6:o;1059:732::-;1195:6;1203;1211;1219;1272:3;1260:9;1251:7;1247:23;1243:33;1240:53;;;1289:1;1286;1279:12;1240:53;1329:9;1316:23;1358:18;1399:2;1391:6;1388:14;1385:34;;;1415:1;1412;1405:12;1385:34;1438:61;1491:7;1482:6;1471:9;1467:22;1438:61;:::i;:::-;1428:71;;1552:2;1541:9;1537:18;1524:32;1508:48;;1581:2;1571:8;1568:16;1565:36;;;1597:1;1594;1587:12;1565:36;;1620:63;1675:7;1664:8;1653:9;1649:24;1620:63;:::i;:::-;1059:732;;1610:73;;-1:-1:-1;;;;1730:2:6;1715:18;;1702:32;;1781:2;1766:18;1753:32;;1059:732;-1:-1:-1;1059:732:6:o;1796:180::-;1855:6;1908:2;1896:9;1887:7;1883:23;1879:32;1876:52;;;1924:1;1921;1914:12;1876:52;-1:-1:-1;1947:23:6;;1796:180;-1:-1:-1;1796:180:6:o;2516:265::-;2589:9;;;2620;;2637:15;;;2631:22;;2617:37;2607:168;;2697:10;2692:3;2688:20;2685:1;2678:31;2732:4;2729:1;2722:15;2760:4;2757:1;2750:15;3138:209;3170:1;3196;3186:132;;3240:10;3235:3;3231:20;3228:1;3221:31;3275:4;3272:1;3265:15;3303:4;3300:1;3293:15;3186:132;-1:-1:-1;3332:9:6;;3138:209::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "286400",
								"executionCost": "24540",
								"totalCost": "310940"
							},
							"external": {
								"hasRegisteredFact()": "2313",
								"isValid(bytes32)": "2458",
								"verifyMerkle(uint256[],uint256[],uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 725,
									"end": 5249,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 921,
									"end": 951,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 921,
									"end": 951,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 951,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 921,
									"end": 951,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 921,
									"end": 951,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 921,
									"end": 951,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 725,
									"end": 5249,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122086b7d21023747acc14e5ec3e7fe8c0978cb46e2dbbe62593a7ffe7a99358d6c164736f6c63430008160033",
									".code": [
										{
											"begin": 725,
											"end": 5249,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "PUSH",
											"source": 4,
											"value": "3FE317A6"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "PUSH",
											"source": 4,
											"value": "6A938567"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "PUSH",
											"source": 4,
											"value": "D6354E15"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 725,
											"end": 5249,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1211,
											"end": 5247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1211,
											"end": 5247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1014,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1014,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2160,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2139,
											"end": 2161,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2121,
											"end": 2162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2121,
											"end": 2162,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2111,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1988,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1880,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1964,
											"end": 1981,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1964,
											"end": 1981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1880,
											"end": 1988,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1503,
											"name": "PUSH",
											"source": 4,
											"value": "C8"
										},
										{
											"begin": 1491,
											"end": 1497,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1503,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2375,
											"end": 2377,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2414,
											"end": 2416,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "48656967687420746F6F20626967"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2433,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2433,
											"end": 2451,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2487,
											"end": 2505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1483,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 761,
											"end": 764,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1615,
											"end": 1616,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1616,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1616,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1533,
											"end": 1665,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1533,
											"end": 1665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2988,
											"end": 2990,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1665,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1533,
											"end": 1665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2970,
											"end": 2991,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3029,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3007,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3007,
											"end": 3025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "544F4F5F4D414E595F4D45524B4C455F51554552494553"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3092,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2786,
											"end": 3133,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1665,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1533,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1712,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1683,
											"end": 1701,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1708,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1683,
											"end": 1712,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1712,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1683,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1712,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1683,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1717,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3556,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3536,
											"end": 3557,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3595,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3573,
											"end": 3591,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3573,
											"end": 3591,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3591,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3596,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F44445F4D45524B4C455F51554555455F53495A45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3605,
											"end": 3656,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3352,
											"end": 3697,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2131,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2040,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2468,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2468,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2468,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2565,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2531,
											"end": 2566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2566,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2566,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2566,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2923,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2923,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2923,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2923,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1776,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1776,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2801,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2801,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2801,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2815,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3246,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3233,
											"end": 3247,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3233,
											"end": 3247,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 4041,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3260,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3324,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3284,
											"end": 3298,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3281,
											"end": 3325,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 4041,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3260,
											"end": 4041,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3396,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3717,
											"end": 3746,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3717,
											"end": 3746,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3717,
											"end": 3746,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3863,
											"end": 3867,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 3868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3843,
											"end": 3868,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 3843,
											"end": 3868,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 3869,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3815,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3945,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3981,
											"end": 4027,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4027,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4027,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4027,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3518,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3518,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3519,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3519,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3519,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 3628,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3260,
											"end": 4041,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 4041,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3260,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4434,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4591,
											"end": 4615,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4591,
											"end": 4615,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4591,
											"end": 4615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4585,
											"end": 4589,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4578,
											"end": 4616,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4410,
											"end": 4439,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 4410,
											"end": 4439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4410,
											"end": 4439,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4337,
											"end": 4338,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4325,
											"end": 4339,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 4325,
											"end": 4339,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4341,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4294,
											"end": 4341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4294,
											"end": 4341,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4294,
											"end": 4341,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4294,
											"end": 4341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4644,
											"end": 4657,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4644,
											"end": 4657,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4636,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4636,
											"end": 4684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4636,
											"end": 4684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4636,
											"end": 4684,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4636,
											"end": 4684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4636,
											"end": 4684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3904,
											"end": 3906,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4636,
											"end": 4684,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4636,
											"end": 4684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4636,
											"end": 4684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 3907,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 3946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "494E56414C49445F4D45524B4C455F494E4449434553"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3955,
											"end": 4007,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4024,
											"end": 4042,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4024,
											"end": 4042,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4636,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3702,
											"end": 4048,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4636,
											"end": 4684,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4636,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4712,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4738,
											"end": 4748,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4776,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4810,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 4825,
											"end": 4833,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4712,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4712,
											"end": 4843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4712,
											"end": 4843,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4712,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4843,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 4870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5029,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5007,
											"end": 5020,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5000,
											"end": 5030,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5116,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5100,
											"end": 5110,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5117,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5079,
											"end": 5117,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5079,
											"end": 5117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5192,
											"end": 5196,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5185,
											"end": 5189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5175,
											"end": 5183,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5171,
											"end": 5190,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5167,
											"end": 5197,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5152,
											"end": 5165,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5198,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5218,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5231,
											"end": 5239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5218,
											"end": 5240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5218,
											"end": 5240,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5218,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 5247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 5247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 5247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 5247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 5247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 5247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 5247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 5247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 5247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1116,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 5942,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1996,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2159,
											"end": 2171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 764,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2191,
											"end": 2192,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2225,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2225,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2183,
											"end": 2253,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2253,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2183,
											"end": 2253,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2253,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 2990,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2183,
											"end": 2253,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2253,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 2991,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3029,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3007,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3007,
											"end": 3025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "544F4F5F4D414E595F4D45524B4C455F51554552494553"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3092,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2786,
											"end": 3133,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2253,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2183,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2498,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2486,
											"end": 2520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2554,
											"end": 2555,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2583,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2659,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2686,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2806,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2796,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2808,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2853,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 2854,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 5724,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2901,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2925,
											"end": 2930,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2934,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 5724,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2901,
											"end": 5724,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3002,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2994,
											"end": 2999,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2990,
											"end": 3003,
											"name": "XOR",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3211,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3165,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3125,
											"end": 3280,
											"name": "MULMOD",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3578,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3567,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3552,
											"end": 3580,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3549,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3529,
											"end": 3533,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3525,
											"end": 3550,
											"name": "XOR",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3648,
											"end": 3657,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3646,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3619,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3658,
											"name": "ADDMOD",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4377,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4365,
											"end": 4378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4365,
											"end": 4378,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4365,
											"end": 4378,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4363,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4363,
											"name": "DUP14",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4379,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4498,
											"end": 4518,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 4498,
											"end": 4518,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4498,
											"end": 4518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4519,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3598,
											"end": 3658,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3598,
											"end": 3658,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3965,
											"end": 3989,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 3990,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3951,
											"end": 3990,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3951,
											"end": 3990,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4562,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4562,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4536,
											"end": 5267,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4774,
											"end": 4813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4774,
											"end": 4813,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4774,
											"end": 4813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4774,
											"end": 4813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 4691,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 4691,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 4691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4884,
											"end": 4893,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4857,
											"end": 4882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4674,
											"end": 4679,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4843,
											"end": 4894,
											"name": "ADDMOD",
											"source": 5
										},
										{
											"begin": 4834,
											"end": 4894,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 4834,
											"end": 4894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5247,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 5232,
											"end": 5237,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5248,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5222,
											"end": 5249,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5249,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 5267,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4536,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5308,
											"end": 5325,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5285,
											"end": 5326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5285,
											"end": 5326,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5563,
											"end": 5592,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5557,
											"end": 5561,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5593,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5547,
											"end": 5593,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5547,
											"end": 5593,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5477,
											"end": 5615,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5406,
											"end": 5633,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5700,
											"end": 5709,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5700,
											"end": 5709,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5438,
											"end": 5443,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5659,
											"end": 5710,
											"name": "ADDMOD",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5710,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2901,
											"end": 5724,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 5724,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2901,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5772,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5772,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5772,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5745,
											"end": 5773,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5871,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5745,
											"end": 5773,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5898,
											"end": 5910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5898,
											"end": 5910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5898,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5890,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 5890,
											"end": 5935,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5890,
											"end": 5935,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5890,
											"end": 5935,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5890,
											"end": 5935,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5890,
											"end": 5935,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4257,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5890,
											"end": 5935,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5890,
											"end": 5935,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5890,
											"end": 5935,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4258,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4296,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4274,
											"end": 4292,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4274,
											"end": 4292,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4274,
											"end": 4292,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24A72B20A624A22FA6A2A925A622AFA82927A7A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 4356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4373,
											"end": 4391,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4373,
											"end": 4391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5890,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4053,
											"end": 4397,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5890,
											"end": 5935,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 5890,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 5942,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 5942,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 5942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 5942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 5942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 5942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 5942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1802,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1530,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1651,
											"end": 1673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 1673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1673,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1728,
											"end": 1745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1728,
											"end": 1745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1723,
											"end": 1796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1761,
											"end": 1785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1785,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1761,
											"end": 1785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1785,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1785,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1796,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1723,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 141,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 14,
											"end": 141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 75,
											"end": 85,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 70,
											"end": 73,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 63,
											"end": 64,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 87,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 106,
											"end": 110,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 103,
											"end": 104,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 130,
											"end": 134,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 127,
											"end": 128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 135,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 146,
											"end": 1054,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 146,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 200,
											"end": 205,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 246,
											"end": 250,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 234,
											"end": 251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 230,
											"end": 257,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 220,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 220,
											"end": 275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 271,
											"end": 272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 261,
											"end": 273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 220,
											"end": 275,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 220,
											"end": 275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 307,
											"end": 313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 294,
											"end": 314,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 333,
											"end": 337,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 356,
											"end": 374,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 393,
											"end": 395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 391,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 386,
											"end": 396,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 383,
											"end": 419,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 383,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 383,
											"end": 419,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 399,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 399,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 399,
											"end": 417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 399,
											"end": 417,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 399,
											"end": 417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 445,
											"end": 447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 442,
											"end": 443,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 438,
											"end": 448,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 477,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 471,
											"end": 480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 536,
											"end": 543,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 531,
											"end": 533,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 527,
											"end": 529,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 523,
											"end": 534,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 519,
											"end": 544,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 511,
											"end": 517,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 595,
											"end": 601,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 583,
											"end": 593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 580,
											"end": 602,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 575,
											"end": 577,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 563,
											"end": 573,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 560,
											"end": 578,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 557,
											"end": 603,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 554,
											"end": 626,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 554,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 554,
											"end": 626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 606,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 606,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 606,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 606,
											"end": 624,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 606,
											"end": 624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 642,
											"end": 644,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 657,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 692,
											"end": 710,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 692,
											"end": 710,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 692,
											"end": 710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 738,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 785,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 770,
											"end": 785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 766,
											"end": 792,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 766,
											"end": 792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 766,
											"end": 792,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 726,
											"end": 743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 726,
											"end": 743,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 726,
											"end": 743,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 726,
											"end": 743,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 804,
											"end": 819,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 804,
											"end": 819,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 804,
											"end": 819,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 801,
											"end": 836,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 801,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 801,
											"end": 836,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 832,
											"end": 833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 830,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 822,
											"end": 834,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 801,
											"end": 836,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 801,
											"end": 836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 868,
											"end": 872,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 860,
											"end": 866,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 856,
											"end": 873,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 845,
											"end": 873,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 845,
											"end": 873,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 882,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 882,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 898,
											"end": 904,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 893,
											"end": 896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 890,
											"end": 905,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 882,
											"end": 1024,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 882,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 882,
											"end": 1024,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 964,
											"end": 981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 964,
											"end": 981,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 952,
											"end": 982,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 952,
											"end": 982,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 915,
											"end": 927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 915,
											"end": 927,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 915,
											"end": 927,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 915,
											"end": 927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 882,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 882,
											"end": 1024,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 882,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 882,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1048,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 146,
											"end": 1054,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 146,
											"end": 1054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1059,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1225,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1275,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1260,
											"end": 1269,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1258,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1270,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1243,
											"end": 1276,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1293,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1240,
											"end": 1293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1289,
											"end": 1290,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1291,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1293,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1240,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1329,
											"end": 1338,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1339,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1376,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1399,
											"end": 1401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1397,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1402,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1419,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1385,
											"end": 1419,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1415,
											"end": 1416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1413,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1417,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1419,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1385,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1438,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1491,
											"end": 1498,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1480,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1489,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1438,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1438,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1438,
											"end": 1499,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1438,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1428,
											"end": 1499,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1428,
											"end": 1499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1552,
											"end": 1554,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1550,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1537,
											"end": 1555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1556,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1556,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1583,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1579,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1584,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1565,
											"end": 1601,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1565,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1565,
											"end": 1601,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1597,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1595,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 1599,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1565,
											"end": 1601,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1565,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1565,
											"end": 1601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1675,
											"end": 1682,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1662,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1673,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1620,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1683,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1620,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1791,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1791,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1683,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1683,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1730,
											"end": 1732,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1783,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1766,
											"end": 1784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1785,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1976,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1796,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1910,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1896,
											"end": 1905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1894,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1883,
											"end": 1906,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1911,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1928,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1876,
											"end": 1928,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1921,
											"end": 1922,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 1926,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1928,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1876,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1970,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1970,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1976,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 1976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2781,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2516,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2598,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2598,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2620,
											"end": 2629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2620,
											"end": 2629,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2637,
											"end": 2652,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2637,
											"end": 2652,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2637,
											"end": 2652,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2617,
											"end": 2654,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2607,
											"end": 2775,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2692,
											"end": 2695,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2688,
											"end": 2708,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2686,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2709,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2736,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2729,
											"end": 2730,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2722,
											"end": 2737,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2760,
											"end": 2764,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2757,
											"end": 2758,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3347,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3138,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3171,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3186,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3186,
											"end": 3318,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3235,
											"end": 3238,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3272,
											"end": 3273,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3265,
											"end": 3280,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3307,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3300,
											"end": 3301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3308,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3186,
											"end": 3318,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3186,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3332,
											"end": 3341,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"AA/contracts/FactRegistry.sol",
								"AA/contracts/IFactRegistry.sol",
								"AA/contracts/IQueryableFactRegistry.sol",
								"AA/contracts/verifier/IMerkleVerifier.sol",
								"AA/contracts/verifier/MerkleStatementContract.sol",
								"AA/contracts/verifier/MerkleVerifier.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"hasRegisteredFact()": "d6354e15",
							"isValid(bytes32)": "6a938567",
							"verifyMerkle(uint256[],uint256[],uint256,uint256)": "3fe317a6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"hasRegisteredFact\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"fact\",\"type\":\"bytes32\"}],\"name\":\"isValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"merkleView\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"initialMerkleQueue\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedRoot\",\"type\":\"uint256\"}],\"name\":\"verifyMerkle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AA/contracts/verifier/MerkleStatementContract.sol\":\"MerkleStatementContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AA/contracts/FactRegistry.sol\":{\"keccak256\":\"0xd7b40f1619ad2020c5a227bc0855dfa5e9b40a238731b4e5f383fdc9cb2e03f5\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://31e1d7128e86019c3b645ceb6ad3904ab195a959f89a81b15aee1df378a950fc\",\"dweb:/ipfs/QmQhVdM3ut37QM9LLspWFihxZBuwQ3XedxPEH1EucLXCRx\"]},\"AA/contracts/IFactRegistry.sol\":{\"keccak256\":\"0xf2f440807966ada15e63fb19919f42f02b0a21d2b5afc461e716ef6aa616d880\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://6fc3608982ed4c58429d8ee75bfb82b52f6ad46d654075bacbf02962cf938407\",\"dweb:/ipfs/QmeXFHk4vTZtSbcQTSVRzrXQ2PuyofY3CVTqKHNcH1hsx6\"]},\"AA/contracts/IQueryableFactRegistry.sol\":{\"keccak256\":\"0x6d401899fa6b540e6b3a18bdbca9bccf38a93cff93a43a73166deed6068e87b3\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://c208a68432793c427b5234782d8faa7a1ab4b17eb9ced76a48faf2bb7d3ae867\",\"dweb:/ipfs/QmaFeANL4KhjXsQwdjrzwMPYXHLxAEjShc4CrwMERg2ZXw\"]},\"AA/contracts/verifier/IMerkleVerifier.sol\":{\"keccak256\":\"0xc95b20d39f588b84bba3a7cdcdb9ba669f6624aa6209584702ddb11e98ee09a4\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://d3722af2e252b66be93a6fd2ee7bf94c2bc61db70aeea5168cdfa29db33b0682\",\"dweb:/ipfs/QmejZQPT83YVnhU3A7DrzwCbT8ZcdosQqGEL5bryECK6wh\"]},\"AA/contracts/verifier/MerkleStatementContract.sol\":{\"keccak256\":\"0x92b290e0454e8553d8684646ce2a01330d49ba79186a48545d918b215bf58c91\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://95a75d80025a7762ae500b925288931695e64a5926306d9d5fec98180757e679\",\"dweb:/ipfs/QmPfR5abh1yuJ9AxrgTzPTPXsdURdPfkZMPsvNMHyu6yYM\"]},\"AA/contracts/verifier/MerkleVerifier.sol\":{\"keccak256\":\"0x3b14d2afa4c695e7cb31823bc4df2943c8677214c1b747630eaa9c23e617a55e\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://7f7a6386f24d2a581ce637d097bbffa15cc629a6a603acd33fe79edbea7601e5\",\"dweb:/ipfs/QmU5B5SAZwJ8UvavMfYwRH85FyAJeVgJTBhSoBdGJRK7Nq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "AA/contracts/verifier/MerkleStatementContract.sol:MerkleStatementContract",
								"label": "verifiedFact",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_bool)"
							},
							{
								"astId": 11,
								"contract": "AA/contracts/verifier/MerkleStatementContract.sol:MerkleStatementContract",
								"label": "anyFactRegistered",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"AA/contracts/verifier/MerkleVerifier.sol": {
				"MerkleVerifier": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AA/contracts/verifier/MerkleVerifier.sol\":696:5944  contract MerkleVerifier is IMerkleVerifier {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"AA/contracts/verifier/MerkleVerifier.sol\":696:5944  contract MerkleVerifier is IMerkleVerifier {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203402524784a21b3c1bb5348fe2f9ebc2a32b395b659ded46d95afb23b272809a64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea26469706673582212203402524784a21b3c1bb5348fe2f9ebc2a32b395b659ded46d95afb23b272809a64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE MUL MSTORE SELFBALANCE DUP5 LOG2 SHL EXTCODECOPY SHL 0xB5 CALLVALUE DUP16 0xE2 0xF9 0xEB 0xC2 LOG3 0x2B CODECOPY JUMPDEST PUSH6 0x9DED46D95AFB 0x23 0xB2 PUSH19 0x809A64736F6C63430008160033000000000000 ",
							"sourceMap": "696:5248:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea26469706673582212203402524784a21b3c1bb5348fe2f9ebc2a32b395b659ded46d95afb23b272809a64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE MUL MSTORE SELFBALANCE DUP5 LOG2 SHL EXTCODECOPY SHL 0xB5 CALLVALUE DUP16 0xE2 0xF9 0xEB 0xC2 LOG3 0x2B CODECOPY JUMPDEST PUSH6 0x9DED46D95AFB 0x23 0xB2 PUSH19 0x809A64736F6C63430008160033000000000000 ",
							"sourceMap": "696:5248:5:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							},
							"internal": {
								"verifyMerkle(uint256,uint256,bytes32,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 696,
									"end": 5944,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 696,
									"end": 5944,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203402524784a21b3c1bb5348fe2f9ebc2a32b395b659ded46d95afb23b272809a64736f6c63430008160033",
									".code": [
										{
											"begin": 696,
											"end": 5944,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 696,
											"end": 5944,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 5944,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 696,
											"end": 5944,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 696,
											"end": 5944,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 696,
											"end": 5944,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"AA/contracts/FactRegistry.sol",
								"AA/contracts/IFactRegistry.sol",
								"AA/contracts/IQueryableFactRegistry.sol",
								"AA/contracts/verifier/IMerkleVerifier.sol",
								"AA/contracts/verifier/MerkleStatementContract.sol",
								"AA/contracts/verifier/MerkleVerifier.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AA/contracts/verifier/MerkleVerifier.sol\":\"MerkleVerifier\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AA/contracts/verifier/IMerkleVerifier.sol\":{\"keccak256\":\"0xc95b20d39f588b84bba3a7cdcdb9ba669f6624aa6209584702ddb11e98ee09a4\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://d3722af2e252b66be93a6fd2ee7bf94c2bc61db70aeea5168cdfa29db33b0682\",\"dweb:/ipfs/QmejZQPT83YVnhU3A7DrzwCbT8ZcdosQqGEL5bryECK6wh\"]},\"AA/contracts/verifier/MerkleVerifier.sol\":{\"keccak256\":\"0x3b14d2afa4c695e7cb31823bc4df2943c8677214c1b747630eaa9c23e617a55e\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://7f7a6386f24d2a581ce637d097bbffa15cc629a6a603acd33fe79edbea7601e5\",\"dweb:/ipfs/QmU5B5SAZwJ8UvavMfYwRH85FyAJeVgJTBhSoBdGJRK7Nq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"AA/contracts/FactRegistry.sol": {
				"ast": {
					"absolutePath": "AA/contracts/FactRegistry.sol",
					"exportedSymbols": {
						"FactRegistry": [
							66
						],
						"IFactRegistry": [
							76
						],
						"IQueryableFactRegistry": [
							87
						]
					},
					"id": 67,
					"license": "Apache-2.0.",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "636:25:0"
						},
						{
							"absolutePath": "AA/contracts/IQueryableFactRegistry.sol",
							"file": "./IQueryableFactRegistry.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 67,
							"sourceUnit": 88,
							"src": "663:38:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IQueryableFactRegistry",
										"nameLocations": [
											"728:22:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 87,
										"src": "728:22:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "728:22:0"
								}
							],
							"canonicalName": "FactRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 66,
							"linearizedBaseContracts": [
								66,
								87,
								76
							],
							"name": "FactRegistry",
							"nameLocation": "712:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "verifiedFact",
									"nameLocation": "825:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 66,
									"src": "792:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 7,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 5,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "800:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "792:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 6,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "811:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "anyFactRegistered",
									"nameLocation": "926:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 66,
									"src": "921:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 9,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "921:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "946:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										75
									],
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "1083:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 20,
															"name": "fact",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "1111:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 19,
														"name": "_factCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1100:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (bytes32) view returns (bool)"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1100:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 18,
												"id": 22,
												"nodeType": "Return",
												"src": "1093:23:0"
											}
										]
									},
									"functionSelector": "6a938567",
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValid",
									"nameLocation": "1023:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 15,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1059:8:0"
									},
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "fact",
												"nameLocation": "1039:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1031:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 12,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:14:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1077:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1077:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:6:0"
									},
									"scope": 66,
									"src": "1014:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "1482:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 31,
														"name": "verifiedFact",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1499:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
															"typeString": "mapping(bytes32 => bool)"
														}
													},
													"id": 33,
													"indexExpression": {
														"id": 32,
														"name": "fact",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1512:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1499:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 30,
												"id": 34,
												"nodeType": "Return",
												"src": "1492:25:0"
											}
										]
									},
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_factCheck",
									"nameLocation": "1428:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "fact",
												"nameLocation": "1447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1439:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 25,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1438:14:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1476:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 28,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1476:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1475:6:0"
									},
									"scope": 66,
									"src": "1419:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "1579:223:0",
										"statements": [
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 41,
															"name": "verifiedFact",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "1651:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 43,
														"indexExpression": {
															"id": 42,
															"name": "factHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "1664:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1651:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1676:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1651:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "1651:29:0"
											},
											{
												"condition": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1727:18:0",
													"subExpression": {
														"id": 47,
														"name": "anyFactRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1728:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 54,
												"nodeType": "IfStatement",
												"src": "1723:73:0",
												"trueBody": {
													"id": 53,
													"nodeType": "Block",
													"src": "1747:49:0",
													"statements": [
														{
															"expression": {
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 49,
																	"name": "anyFactRegistered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1761:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1781:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1761:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 52,
															"nodeType": "ExpressionStatement",
															"src": "1761:24:0"
														}
													]
												}
											}
										]
									},
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerFact",
									"nameLocation": "1539:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "factHash",
												"nameLocation": "1560:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1552:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 37,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1551:18:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1579:0:0"
									},
									"scope": 66,
									"src": "1530:272:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										86
									],
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "1947:41:0",
										"statements": [
											{
												"expression": {
													"id": 62,
													"name": "anyFactRegistered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "1964:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 61,
												"id": 63,
												"nodeType": "Return",
												"src": "1957:24:0"
											}
										]
									},
									"functionSelector": "d6354e15",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRegisteredFact",
									"nameLocation": "1889:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 58,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1923:8:0"
									},
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1906:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1941:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1941:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1940:6:0"
									},
									"scope": 66,
									"src": "1880:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 67,
							"src": "703:1287:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "636:1355:0"
				},
				"id": 0
			},
			"AA/contracts/IFactRegistry.sol": {
				"ast": {
					"absolutePath": "AA/contracts/IFactRegistry.sol",
					"exportedSymbols": {
						"IFactRegistry": [
							76
						]
					},
					"id": 77,
					"license": "Apache-2.0.",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 68,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "636:25:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFactRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 76,
							"linearizedBaseContracts": [
								76
							],
							"name": "IFactRegistry",
							"nameLocation": "1461:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6a938567",
									"id": 75,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValid",
									"nameLocation": "1584:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "fact",
												"nameLocation": "1600:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1592:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 69,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1592:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1591:14:1"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1629:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 72,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1629:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:6:1"
									},
									"scope": 76,
									"src": "1575:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 77,
							"src": "1451:186:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "636:1002:1"
				},
				"id": 1
			},
			"AA/contracts/IQueryableFactRegistry.sol": {
				"ast": {
					"absolutePath": "AA/contracts/IQueryableFactRegistry.sol",
					"exportedSymbols": {
						"IFactRegistry": [
							76
						],
						"IQueryableFactRegistry": [
							87
						]
					},
					"id": 88,
					"license": "Apache-2.0.",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 78,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "636:25:2"
						},
						{
							"absolutePath": "AA/contracts/IFactRegistry.sol",
							"file": "./IFactRegistry.sol",
							"id": 79,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 88,
							"sourceUnit": 77,
							"src": "663:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IFactRegistry",
										"nameLocations": [
											"907:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 76,
										"src": "907:13:2"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "907:13:2"
								}
							],
							"canonicalName": "IQueryableFactRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 87,
							"linearizedBaseContracts": [
								87,
								76
							],
							"name": "IQueryableFactRegistry",
							"nameLocation": "881:22:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d6354e15",
									"id": 86,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRegisteredFact",
									"nameLocation": "1011:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1028:2:2"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1054:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 83,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1054:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:6:2"
									},
									"scope": 87,
									"src": "1002:58:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 88,
							"src": "871:191:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "636:427:2"
				},
				"id": 2
			},
			"AA/contracts/verifier/IMerkleVerifier.sol": {
				"ast": {
					"absolutePath": "AA/contracts/verifier/IMerkleVerifier.sol",
					"exportedSymbols": {
						"IMerkleVerifier": [
							109
						]
					},
					"id": 110,
					"license": "Apache-2.0.",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 89,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "636:25:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "IMerkleVerifier",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 109,
							"linearizedBaseContracts": [
								109
							],
							"name": "IMerkleVerifier",
							"nameLocation": "681:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 92,
									"mutability": "constant",
									"name": "MAX_N_MERKLE_VERIFIER_QUERIES",
									"nameLocation": "729:29:3",
									"nodeType": "VariableDeclaration",
									"scope": 109,
									"src": "703:61:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 90,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "703:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 91,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "761:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "MERKLE_SLOT_SIZE_IN_BYTES",
									"nameLocation": "896:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 109,
									"src": "870:58:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "870:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783430",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "924:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "0x40"
									},
									"visibility": "internal"
								},
								{
									"id": 108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verifyMerkle",
									"nameLocation": "944:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "channelPtr",
												"nameLocation": "974:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "966:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "966:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "queuePtr",
												"nameLocation": "1002:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "994:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "1028:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1020:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 100,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1050:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1042:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "956:101:3"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1097:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1089:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 105,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:14:3"
									},
									"scope": 109,
									"src": "935:168:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 110,
							"src": "663:442:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "636:470:3"
				},
				"id": 3
			},
			"AA/contracts/verifier/MerkleStatementContract.sol": {
				"ast": {
					"absolutePath": "AA/contracts/verifier/MerkleStatementContract.sol",
					"exportedSymbols": {
						"FactRegistry": [
							66
						],
						"IFactRegistry": [
							76
						],
						"IMerkleVerifier": [
							109
						],
						"IQueryableFactRegistry": [
							87
						],
						"MerkleStatementContract": [
							203
						],
						"MerkleVerifier": [
							252
						]
					},
					"id": 204,
					"license": "Apache-2.0.",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 111,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "636:25:4"
						},
						{
							"absolutePath": "AA/contracts/FactRegistry.sol",
							"file": "../FactRegistry.sol",
							"id": 112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 204,
							"sourceUnit": 67,
							"src": "663:29:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "AA/contracts/verifier/MerkleVerifier.sol",
							"file": "./MerkleVerifier.sol",
							"id": 113,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 204,
							"sourceUnit": 253,
							"src": "693:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 114,
										"name": "MerkleVerifier",
										"nameLocations": [
											"761:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 252,
										"src": "761:14:4"
									},
									"id": 115,
									"nodeType": "InheritanceSpecifier",
									"src": "761:14:4"
								},
								{
									"baseName": {
										"id": 116,
										"name": "FactRegistry",
										"nameLocations": [
											"777:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 66,
										"src": "777:12:4"
									},
									"id": 117,
									"nodeType": "InheritanceSpecifier",
									"src": "777:12:4"
								}
							],
							"canonicalName": "MerkleStatementContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 203,
							"linearizedBaseContracts": [
								203,
								66,
								87,
								76,
								252,
								109
							],
							"name": "MerkleStatementContract",
							"nameLocation": "734:23:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "1382:3865:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 131,
																"name": "height",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1491:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "323030",
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1500:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_200_by_1",
																	"typeString": "int_const 200"
																},
																"value": "200"
															},
															"src": "1491:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48656967687420746f6f20626967",
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1505:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55918135f02c7febf6915eb229bfabd2a0e247e9f1deac0ed56fa5446ec6837e",
																"typeString": "literal_string \"Height too big\""
															},
															"value": "Height too big"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55918135f02c7febf6915eb229bfabd2a0e247e9f1deac0ed56fa5446ec6837e",
																"typeString": "literal_string \"Height too big\""
															}
														],
														"id": 130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1483:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1483:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "1483:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 138,
																	"name": "initialMerkleQueue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1554:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1573:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1554:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 140,
																	"name": "MAX_N_MERKLE_VERIFIER_QUERIES",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "1583:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1615:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1583:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1554:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "544f4f5f4d414e595f4d45524b4c455f51554552494553",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1630:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35f604cd56f65d9ddc21f55b2550bc6cbb1207a3aa8bf69845205c658118a134",
																"typeString": "literal_string \"TOO_MANY_MERKLE_QUERIES\""
															},
															"value": "TOO_MANY_MERKLE_QUERIES"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35f604cd56f65d9ddc21f55b2550bc6cbb1207a3aa8bf69845205c658118a134",
																"typeString": "literal_string \"TOO_MANY_MERKLE_QUERIES\""
															}
														],
														"id": 137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1533:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1533:132:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "1533:132:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 148,
																		"name": "initialMerkleQueue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 123,
																		"src": "1683:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1702:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1683:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1711:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1683:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1716:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f44445f4d45524b4c455f51554555455f53495a45",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1719:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b35436d8c58f011f194f251c7245f96483087789aa0141b1fdcef1f22922e74a",
																"typeString": "literal_string \"ODD_MERKLE_QUEUE_SIZE\""
															},
															"value": "ODD_MERKLE_QUEUE_SIZE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b35436d8c58f011f194f251c7245f96483087789aa0141b1fdcef1f22922e74a",
																"typeString": "literal_string \"ODD_MERKLE_QUEUE_SIZE\""
															}
														],
														"id": 147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1675:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1675:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1675:68:4"
											},
											{
												"assignments": [
													158
												],
												"declarations": [
													{
														"constant": false,
														"id": 158,
														"mutability": "mutable",
														"name": "merkleQueuePtr",
														"nameLocation": "1762:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "1754:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 157,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1754:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 159,
												"nodeType": "VariableDeclarationStatement",
												"src": "1754:22:4"
											},
											{
												"assignments": [
													161
												],
												"declarations": [
													{
														"constant": false,
														"id": 161,
														"mutability": "mutable",
														"name": "channelPtr",
														"nameLocation": "1794:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "1786:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 160,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1786:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 162,
												"nodeType": "VariableDeclarationStatement",
												"src": "1786:18:4"
											},
											{
												"assignments": [
													164
												],
												"declarations": [
													{
														"constant": false,
														"id": 164,
														"mutability": "mutable",
														"name": "nQueries",
														"nameLocation": "1822:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "1814:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 163,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1814:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 165,
												"nodeType": "VariableDeclarationStatement",
												"src": "1814:16:4"
											},
											{
												"assignments": [
													167
												],
												"declarations": [
													{
														"constant": false,
														"id": 167,
														"mutability": "mutable",
														"name": "dataToHashPtr",
														"nameLocation": "1848:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "1840:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 166,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1840:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 168,
												"nodeType": "VariableDeclarationStatement",
												"src": "1840:21:4"
											},
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"mutability": "mutable",
														"name": "badInput",
														"nameLocation": "1879:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "1871:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 169,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1871:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 172,
												"initialValue": {
													"hexValue": "30",
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1890:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1871:20:4"
											},
											{
												"AST": {
													"nativeSrc": "1911:2715:4",
													"nodeType": "YulBlock",
													"src": "1911:2715:4",
													"statements": [
														{
															"nativeSrc": "1999:42:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1999:42:4",
															"value": {
																"arguments": [
																	{
																		"name": "merkleView",
																		"nativeSrc": "2024:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "2024:10:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2036:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2020:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2020:3:4"
																},
																"nativeSrc": "2020:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2020:21:4"
															},
															"variables": [
																{
																	"name": "merkleViewPtr",
																	"nativeSrc": "2003:13:4",
																	"nodeType": "YulTypedName",
																	"src": "2003:13:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2107:25:4",
															"nodeType": "YulAssignment",
															"src": "2107:25:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2127:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2127:4:4",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2121:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2121:5:4"
																},
																"nativeSrc": "2121:11:4",
																"nodeType": "YulFunctionCall",
																"src": "2121:11:4"
															},
															"variableNames": [
																{
																	"name": "channelPtr",
																	"nativeSrc": "2107:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "2107:10:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "channelPtr",
																		"nativeSrc": "2300:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "2300:10:4"
																	},
																	{
																		"name": "merkleViewPtr",
																		"nativeSrc": "2312:13:4",
																		"nodeType": "YulIdentifier",
																		"src": "2312:13:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2293:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2293:6:4"
																},
																"nativeSrc": "2293:33:4",
																"nodeType": "YulFunctionCall",
																"src": "2293:33:4"
															},
															"nativeSrc": "2293:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "2293:33:4"
														},
														{
															"nativeSrc": "2421:47:4",
															"nodeType": "YulAssignment",
															"src": "2421:47:4",
															"value": {
																"arguments": [
																	{
																		"name": "initialMerkleQueue",
																		"nativeSrc": "2443:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "2443:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2463:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2463:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2439:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2439:3:4"
																},
																"nativeSrc": "2439:29:4",
																"nodeType": "YulFunctionCall",
																"src": "2439:29:4"
															},
															"variableNames": [
																{
																	"name": "merkleQueuePtr",
																	"nativeSrc": "2421:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "2421:14:4"
																}
															]
														},
														{
															"nativeSrc": "2519:47:4",
															"nodeType": "YulAssignment",
															"src": "2519:47:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "initialMerkleQueue",
																				"nativeSrc": "2541:18:4",
																				"nodeType": "YulIdentifier",
																				"src": "2541:18:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2535:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "2535:5:4"
																		},
																		"nativeSrc": "2535:25:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:25:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2562:3:4",
																		"nodeType": "YulLiteral",
																		"src": "2562:3:4",
																		"type": "",
																		"value": "0x2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2531:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:4"
																},
																"nativeSrc": "2531:35:4",
																"nodeType": "YulFunctionCall",
																"src": "2531:35:4"
															},
															"variableNames": [
																{
																	"name": "nQueries",
																	"nativeSrc": "2519:8:4",
																	"nodeType": "YulIdentifier",
																	"src": "2519:8:4"
																}
															]
														},
														{
															"nativeSrc": "2676:139:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2676:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "merkleQueuePtr",
																		"nativeSrc": "2729:14:4",
																		"nodeType": "YulIdentifier",
																		"src": "2729:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "nQueries",
																				"nativeSrc": "2765:8:4",
																				"nodeType": "YulIdentifier",
																				"src": "2765:8:4"
																			},
																			{
																				"name": "MERKLE_SLOT_SIZE_IN_BYTES",
																				"nativeSrc": "2775:25:4",
																				"nodeType": "YulIdentifier",
																				"src": "2775:25:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2761:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2761:3:4"
																		},
																		"nativeSrc": "2761:40:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2761:40:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2708:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2708:3:4"
																},
																"nativeSrc": "2708:107:4",
																"nodeType": "YulFunctionCall",
																"src": "2708:107:4"
															},
															"variables": [
																{
																	"name": "initialMerkleQueueEndPtr",
																	"nativeSrc": "2680:24:4",
																	"nodeType": "YulTypedName",
																	"src": "2680:24:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2885:38:4",
															"nodeType": "YulAssignment",
															"src": "2885:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "channelPtr",
																		"nativeSrc": "2906:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "2906:10:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2918:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2918:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2902:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2902:3:4"
																},
																"nativeSrc": "2902:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2902:21:4"
															},
															"variableNames": [
																{
																	"name": "dataToHashPtr",
																	"nativeSrc": "2885:13:4",
																	"nodeType": "YulIdentifier",
																	"src": "2885:13:4"
																}
															]
														},
														{
															"nativeSrc": "3212:35:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3212:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "height",
																		"nativeSrc": "3237:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3237:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3245:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3245:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3233:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:4"
																},
																"nativeSrc": "3233:14:4",
																"nodeType": "YulFunctionCall",
																"src": "3233:14:4"
															},
															"variables": [
																{
																	"name": "idxLowerLimit",
																	"nativeSrc": "3216:13:4",
																	"nodeType": "YulTypedName",
																	"src": "3216:13:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3343:698:4",
																"nodeType": "YulBlock",
																"src": "3343:698:4",
																"statements": [
																	{
																		"nativeSrc": "3361:35:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3361:35:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "merkleQueuePtr",
																					"nativeSrc": "3381:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "3381:14:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "3375:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3375:5:4"
																			},
																			"nativeSrc": "3375:21:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3375:21:4"
																		},
																		"variables": [
																			{
																				"name": "curIdx",
																				"nativeSrc": "3365:6:4",
																				"nodeType": "YulTypedName",
																				"src": "3365:6:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3468:51:4",
																		"nodeType": "YulAssignment",
																		"src": "3468:51:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "badInput",
																					"nativeSrc": "3483:8:4",
																					"nodeType": "YulIdentifier",
																					"src": "3483:8:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "curIdx",
																							"nativeSrc": "3496:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "3496:6:4"
																						},
																						{
																							"name": "idxLowerLimit",
																							"nativeSrc": "3504:13:4",
																							"nodeType": "YulIdentifier",
																							"src": "3504:13:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3493:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "3493:2:4"
																					},
																					"nativeSrc": "3493:25:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3493:25:4"
																				}
																			],
																			"functionName": {
																				"name": "or",
																				"nativeSrc": "3480:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "3480:2:4"
																			},
																			"nativeSrc": "3480:39:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3480:39:4"
																		},
																		"variableNames": [
																			{
																				"name": "badInput",
																				"nativeSrc": "3468:8:4",
																				"nodeType": "YulIdentifier",
																				"src": "3468:8:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3598:31:4",
																		"nodeType": "YulAssignment",
																		"src": "3598:31:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "curIdx",
																					"nativeSrc": "3619:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "3619:6:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3627:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3627:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3615:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "3615:3:4"
																			},
																			"nativeSrc": "3615:14:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3615:14:4"
																		},
																		"variableNames": [
																			{
																				"name": "idxLowerLimit",
																				"nativeSrc": "3598:13:4",
																				"nodeType": "YulIdentifier",
																				"src": "3598:13:4"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dataToHashPtr",
																					"nativeSrc": "3724:13:4",
																					"nodeType": "YulIdentifier",
																					"src": "3724:13:4"
																				},
																				{
																					"name": "curIdx",
																					"nativeSrc": "3739:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "3739:6:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3717:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3717:6:4"
																			},
																			"nativeSrc": "3717:29:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3717:29:4"
																		},
																		"nativeSrc": "3717:29:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3717:29:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dataToHashPtr",
																							"nativeSrc": "3795:13:4",
																							"nodeType": "YulIdentifier",
																							"src": "3795:13:4"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3810:4:4",
																							"nodeType": "YulLiteral",
																							"src": "3810:4:4",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3791:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "3791:3:4"
																					},
																					"nativeSrc": "3791:24:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3791:24:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "merkleQueuePtr",
																									"nativeSrc": "3847:14:4",
																									"nodeType": "YulIdentifier",
																									"src": "3847:14:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3863:4:4",
																									"nodeType": "YulLiteral",
																									"src": "3863:4:4",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3843:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "3843:3:4"
																							},
																							"nativeSrc": "3843:25:4",
																							"nodeType": "YulFunctionCall",
																							"src": "3843:25:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3837:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "3837:5:4"
																					},
																					"nativeSrc": "3837:32:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3837:32:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3763:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3763:6:4"
																			},
																			"nativeSrc": "3763:124:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3763:124:4"
																		},
																		"nativeSrc": "3763:124:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3763:124:4"
																	},
																	{
																		"nativeSrc": "3905:41:4",
																		"nodeType": "YulAssignment",
																		"src": "3905:41:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataToHashPtr",
																					"nativeSrc": "3926:13:4",
																					"nodeType": "YulIdentifier",
																					"src": "3926:13:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3941:4:4",
																					"nodeType": "YulLiteral",
																					"src": "3941:4:4",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3922:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "3922:3:4"
																			},
																			"nativeSrc": "3922:24:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3922:24:4"
																		},
																		"variableNames": [
																			{
																				"name": "dataToHashPtr",
																				"nativeSrc": "3905:13:4",
																				"nodeType": "YulIdentifier",
																				"src": "3905:13:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3963:64:4",
																		"nodeType": "YulAssignment",
																		"src": "3963:64:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "merkleQueuePtr",
																					"nativeSrc": "3985:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "3985:14:4"
																				},
																				{
																					"name": "MERKLE_SLOT_SIZE_IN_BYTES",
																					"nativeSrc": "4001:25:4",
																					"nodeType": "YulIdentifier",
																					"src": "4001:25:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3981:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "3981:3:4"
																			},
																			"nativeSrc": "3981:46:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3981:46:4"
																		},
																		"variableNames": [
																			{
																				"name": "merkleQueuePtr",
																				"nativeSrc": "3963:14:4",
																				"nodeType": "YulIdentifier",
																				"src": "3963:14:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "merkleQueuePtr",
																		"nativeSrc": "3284:14:4",
																		"nodeType": "YulIdentifier",
																		"src": "3284:14:4"
																	},
																	{
																		"name": "initialMerkleQueueEndPtr",
																		"nativeSrc": "3300:24:4",
																		"nodeType": "YulIdentifier",
																		"src": "3300:24:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3281:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "3281:2:4"
																},
																"nativeSrc": "3281:44:4",
																"nodeType": "YulFunctionCall",
																"src": "3281:44:4"
															},
															"nativeSrc": "3260:781:4",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3326:16:4",
																"nodeType": "YulBlock",
																"src": "3326:16:4",
																"statements": []
															},
															"pre": {
																"nativeSrc": "3264:16:4",
																"nodeType": "YulBlock",
																"src": "3264:16:4",
																"statements": []
															},
															"src": "3260:781:4"
														},
														{
															"nativeSrc": "4282:59:4",
															"nodeType": "YulAssignment",
															"src": "4282:59:4",
															"value": {
																"arguments": [
																	{
																		"name": "badInput",
																		"nativeSrc": "4297:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "4297:8:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "idxLowerLimit",
																				"nativeSrc": "4310:13:4",
																				"nodeType": "YulIdentifier",
																				"src": "4310:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "height",
																						"nativeSrc": "4329:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4329:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4337:1:4",
																						"nodeType": "YulLiteral",
																						"src": "4337:1:4",
																						"type": "",
																						"value": "2"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4325:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4325:3:4"
																				},
																				"nativeSrc": "4325:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4325:14:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4307:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4307:2:4"
																		},
																		"nativeSrc": "4307:33:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4307:33:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4294:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4294:2:4"
																},
																"nativeSrc": "4294:47:4",
																"nodeType": "YulFunctionCall",
																"src": "4294:47:4"
															},
															"variableNames": [
																{
																	"name": "badInput",
																	"nativeSrc": "4282:8:4",
																	"nodeType": "YulIdentifier",
																	"src": "4282:8:4"
																}
															]
														},
														{
															"nativeSrc": "4392:47:4",
															"nodeType": "YulAssignment",
															"src": "4392:47:4",
															"value": {
																"arguments": [
																	{
																		"name": "initialMerkleQueue",
																		"nativeSrc": "4414:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "4414:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4434:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4434:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4410:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4410:3:4"
																},
																"nativeSrc": "4410:29:4",
																"nodeType": "YulFunctionCall",
																"src": "4410:29:4"
															},
															"variableNames": [
																{
																	"name": "merkleQueuePtr",
																	"nativeSrc": "4392:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "4392:14:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4585:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4585:4:4",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataToHashPtr",
																				"nativeSrc": "4595:13:4",
																				"nodeType": "YulIdentifier",
																				"src": "4595:13:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4610:4:4",
																				"nodeType": "YulLiteral",
																				"src": "4610:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4591:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4591:3:4"
																		},
																		"nativeSrc": "4591:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4591:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4578:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4578:6:4"
																},
																"nativeSrc": "4578:38:4",
																"nodeType": "YulFunctionCall",
																"src": "4578:38:4"
															},
															"nativeSrc": "4578:38:4",
															"nodeType": "YulExpressionStatement",
															"src": "4578:38:4"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "2775:25:4",
														"valueSize": 1
													},
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "4001:25:4",
														"valueSize": 1
													},
													{
														"declaration": 170,
														"isOffset": false,
														"isSlot": false,
														"src": "3468:8:4",
														"valueSize": 1
													},
													{
														"declaration": 170,
														"isOffset": false,
														"isSlot": false,
														"src": "3483:8:4",
														"valueSize": 1
													},
													{
														"declaration": 170,
														"isOffset": false,
														"isSlot": false,
														"src": "4282:8:4",
														"valueSize": 1
													},
													{
														"declaration": 170,
														"isOffset": false,
														"isSlot": false,
														"src": "4297:8:4",
														"valueSize": 1
													},
													{
														"declaration": 161,
														"isOffset": false,
														"isSlot": false,
														"src": "2107:10:4",
														"valueSize": 1
													},
													{
														"declaration": 161,
														"isOffset": false,
														"isSlot": false,
														"src": "2300:10:4",
														"valueSize": 1
													},
													{
														"declaration": 161,
														"isOffset": false,
														"isSlot": false,
														"src": "2906:10:4",
														"valueSize": 1
													},
													{
														"declaration": 167,
														"isOffset": false,
														"isSlot": false,
														"src": "2885:13:4",
														"valueSize": 1
													},
													{
														"declaration": 167,
														"isOffset": false,
														"isSlot": false,
														"src": "3724:13:4",
														"valueSize": 1
													},
													{
														"declaration": 167,
														"isOffset": false,
														"isSlot": false,
														"src": "3795:13:4",
														"valueSize": 1
													},
													{
														"declaration": 167,
														"isOffset": false,
														"isSlot": false,
														"src": "3905:13:4",
														"valueSize": 1
													},
													{
														"declaration": 167,
														"isOffset": false,
														"isSlot": false,
														"src": "3926:13:4",
														"valueSize": 1
													},
													{
														"declaration": 167,
														"isOffset": false,
														"isSlot": false,
														"src": "4595:13:4",
														"valueSize": 1
													},
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "3237:6:4",
														"valueSize": 1
													},
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "4329:6:4",
														"valueSize": 1
													},
													{
														"declaration": 123,
														"isOffset": false,
														"isSlot": false,
														"src": "2443:18:4",
														"valueSize": 1
													},
													{
														"declaration": 123,
														"isOffset": false,
														"isSlot": false,
														"src": "2541:18:4",
														"valueSize": 1
													},
													{
														"declaration": 123,
														"isOffset": false,
														"isSlot": false,
														"src": "4414:18:4",
														"valueSize": 1
													},
													{
														"declaration": 158,
														"isOffset": false,
														"isSlot": false,
														"src": "2421:14:4",
														"valueSize": 1
													},
													{
														"declaration": 158,
														"isOffset": false,
														"isSlot": false,
														"src": "2729:14:4",
														"valueSize": 1
													},
													{
														"declaration": 158,
														"isOffset": false,
														"isSlot": false,
														"src": "3284:14:4",
														"valueSize": 1
													},
													{
														"declaration": 158,
														"isOffset": false,
														"isSlot": false,
														"src": "3381:14:4",
														"valueSize": 1
													},
													{
														"declaration": 158,
														"isOffset": false,
														"isSlot": false,
														"src": "3847:14:4",
														"valueSize": 1
													},
													{
														"declaration": 158,
														"isOffset": false,
														"isSlot": false,
														"src": "3963:14:4",
														"valueSize": 1
													},
													{
														"declaration": 158,
														"isOffset": false,
														"isSlot": false,
														"src": "3985:14:4",
														"valueSize": 1
													},
													{
														"declaration": 158,
														"isOffset": false,
														"isSlot": false,
														"src": "4392:14:4",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "2024:10:4",
														"valueSize": 1
													},
													{
														"declaration": 164,
														"isOffset": false,
														"isSlot": false,
														"src": "2519:8:4",
														"valueSize": 1
													},
													{
														"declaration": 164,
														"isOffset": false,
														"isSlot": false,
														"src": "2765:8:4",
														"valueSize": 1
													}
												],
												"id": 173,
												"nodeType": "InlineAssembly",
												"src": "1902:2724:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 175,
																"name": "badInput",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "4644:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4656:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4644:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f4d45524b4c455f494e4449434553",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4659:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cfd6507fc701a5f6837637e5302178c4db6be8c9cc233bd7cd6b921a4cfef46e",
																"typeString": "literal_string \"INVALID_MERKLE_INDICES\""
															},
															"value": "INVALID_MERKLE_INDICES"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cfd6507fc701a5f6837637e5302178c4db6be8c9cc233bd7cd6b921a4cfef46e",
																"typeString": "literal_string \"INVALID_MERKLE_INDICES\""
															}
														],
														"id": 174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4636:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4636:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "4636:48:4"
											},
											{
												"assignments": [
													182
												],
												"declarations": [
													{
														"constant": false,
														"id": 182,
														"mutability": "mutable",
														"name": "resRoot",
														"nameLocation": "4702:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "4694:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 181,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4694:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 192,
												"initialValue": {
													"arguments": [
														{
															"id": 184,
															"name": "channelPtr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "4738:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 185,
															"name": "merkleQueuePtr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4762:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 188,
																	"name": "expectedRoot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "4798:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4790:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 186,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4790:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4790:21:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 190,
															"name": "nQueries",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "4825:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 183,
														"name": "verifyMerkle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															202,
															251
														],
														"referencedDeclaration": 251,
														"src": "4712:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (uint256,uint256,bytes32,uint256) view returns (bytes32)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4712:131:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4694:149:4"
											},
											{
												"assignments": [
													194
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "factHash",
														"nameLocation": "4862:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "4854:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 193,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4854:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 195,
												"nodeType": "VariableDeclarationStatement",
												"src": "4854:16:4"
											},
											{
												"AST": {
													"nativeSrc": "4889:319:4",
													"nodeType": "YulBlock",
													"src": "4889:319:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dataToHashPtr",
																		"nativeSrc": "5007:13:4",
																		"nodeType": "YulIdentifier",
																		"src": "5007:13:4"
																	},
																	{
																		"name": "resRoot",
																		"nativeSrc": "5022:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "5022:7:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5000:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5000:6:4"
																},
																"nativeSrc": "5000:30:4",
																"nodeType": "YulFunctionCall",
																"src": "5000:30:4"
															},
															"nativeSrc": "5000:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "5000:30:4"
														},
														{
															"nativeSrc": "5079:38:4",
															"nodeType": "YulAssignment",
															"src": "5079:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "channelPtr",
																		"nativeSrc": "5100:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "5100:10:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5112:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5112:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5096:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5096:3:4"
																},
																"nativeSrc": "5096:21:4",
																"nodeType": "YulFunctionCall",
																"src": "5096:21:4"
															},
															"variableNames": [
																{
																	"name": "dataToHashPtr",
																	"nativeSrc": "5079:13:4",
																	"nodeType": "YulIdentifier",
																	"src": "5079:13:4"
																}
															]
														},
														{
															"nativeSrc": "5130:68:4",
															"nodeType": "YulAssignment",
															"src": "5130:68:4",
															"value": {
																"arguments": [
																	{
																		"name": "dataToHashPtr",
																		"nativeSrc": "5152:13:4",
																		"nodeType": "YulIdentifier",
																		"src": "5152:13:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "nQueries",
																						"nativeSrc": "5175:8:4",
																						"nodeType": "YulIdentifier",
																						"src": "5175:8:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5185:4:4",
																						"nodeType": "YulLiteral",
																						"src": "5185:4:4",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5171:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5171:3:4"
																				},
																				"nativeSrc": "5171:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5171:19:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5192:4:4",
																				"nodeType": "YulLiteral",
																				"src": "5192:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5167:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:4"
																		},
																		"nativeSrc": "5167:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5167:30:4"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5142:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "5142:9:4"
																},
																"nativeSrc": "5142:56:4",
																"nodeType": "YulFunctionCall",
																"src": "5142:56:4"
															},
															"variableNames": [
																{
																	"name": "factHash",
																	"nativeSrc": "5130:8:4",
																	"nodeType": "YulIdentifier",
																	"src": "5130:8:4"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 161,
														"isOffset": false,
														"isSlot": false,
														"src": "5100:10:4",
														"valueSize": 1
													},
													{
														"declaration": 167,
														"isOffset": false,
														"isSlot": false,
														"src": "5007:13:4",
														"valueSize": 1
													},
													{
														"declaration": 167,
														"isOffset": false,
														"isSlot": false,
														"src": "5079:13:4",
														"valueSize": 1
													},
													{
														"declaration": 167,
														"isOffset": false,
														"isSlot": false,
														"src": "5152:13:4",
														"valueSize": 1
													},
													{
														"declaration": 194,
														"isOffset": false,
														"isSlot": false,
														"src": "5130:8:4",
														"valueSize": 1
													},
													{
														"declaration": 164,
														"isOffset": false,
														"isSlot": false,
														"src": "5175:8:4",
														"valueSize": 1
													},
													{
														"declaration": 182,
														"isOffset": false,
														"isSlot": false,
														"src": "5022:7:4",
														"valueSize": 1
													}
												],
												"id": 196,
												"nodeType": "InlineAssembly",
												"src": "4880:328:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 198,
															"name": "factHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5231:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 197,
														"name": "registerFact",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "5218:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5218:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "5218:22:4"
											}
										]
									},
									"functionSelector": "3fe317a6",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyMerkle",
									"nameLocation": "1220:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "merkleView",
												"nameLocation": "1259:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1242:27:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 118,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1242:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 119,
													"nodeType": "ArrayTypeName",
													"src": "1242:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "initialMerkleQueue",
												"nameLocation": "1296:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1279:35:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 121,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1279:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 122,
													"nodeType": "ArrayTypeName",
													"src": "1279:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "height",
												"nameLocation": "1332:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1324:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1324:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "expectedRoot",
												"nameLocation": "1356:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1348:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:142:4"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1382:0:4"
									},
									"scope": 203,
									"src": "1211:4036:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 204,
							"src": "725:4524:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "636:4614:4"
				},
				"id": 4
			},
			"AA/contracts/verifier/MerkleVerifier.sol": {
				"ast": {
					"absolutePath": "AA/contracts/verifier/MerkleVerifier.sol",
					"exportedSymbols": {
						"IMerkleVerifier": [
							109
						],
						"MerkleVerifier": [
							252
						]
					},
					"id": 253,
					"license": "Apache-2.0.",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 205,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "636:25:5"
						},
						{
							"absolutePath": "AA/contracts/verifier/IMerkleVerifier.sol",
							"file": "./IMerkleVerifier.sol",
							"id": 206,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 253,
							"sourceUnit": 110,
							"src": "663:31:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 207,
										"name": "IMerkleVerifier",
										"nameLocations": [
											"723:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 109,
										"src": "723:15:5"
									},
									"id": 208,
									"nodeType": "InheritanceSpecifier",
									"src": "723:15:5"
								}
							],
							"canonicalName": "MerkleVerifier",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 252,
							"linearizedBaseContracts": [
								252,
								109
							],
							"name": "MerkleVerifier",
							"nameLocation": "705:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 212,
									"mutability": "constant",
									"name": "COMMITMENT_MASK",
									"nameLocation": "855:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 252,
									"src": "829:126:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 209,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "829:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646303030303030303030303030303030303030303030303030",
												"id": 210,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "883:66:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665561335876943319670319585689600_by_1",
													"typeString": "int_const 1157...(70 digits omitted)...9600"
												},
												"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
											}
										],
										"id": 211,
										"isConstant": false,
										"isInlineArray": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "873:82:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665561335876943319670319585689600_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9600"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 215,
									"mutability": "constant",
									"name": "COMMITMENT_SIZE_IN_BYTES",
									"nameLocation": "1303:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 252,
									"src": "1277:57:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 213,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1277:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783230",
										"id": 214,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1330:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "0x20"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 218,
									"mutability": "constant",
									"name": "TWO_COMMITMENTS_SIZE_IN_BYTES",
									"nameLocation": "1403:29:5",
									"nodeType": "VariableDeclaration",
									"scope": 252,
									"src": "1377:62:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1377:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783430",
										"id": 217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1435:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "0x40"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 221,
									"mutability": "constant",
									"name": "INDEX_SIZE_IN_BYTES",
									"nameLocation": "1528:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 252,
									"src": "1502:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 219,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1502:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783230",
										"id": 220,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1550:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "0x20"
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										108
									],
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "2173:3769:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 236,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2191:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 237,
																"name": "MAX_N_MERKLE_VERIFIER_QUERIES",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "2196:29:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2191:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "544f4f5f4d414e595f4d45524b4c455f51554552494553",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2227:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35f604cd56f65d9ddc21f55b2550bc6cbb1207a3aa8bf69845205c658118a134",
																"typeString": "literal_string \"TOO_MANY_MERKLE_QUERIES\""
															},
															"value": "TOO_MANY_MERKLE_QUERIES"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35f604cd56f65d9ddc21f55b2550bc6cbb1207a3aa8bf69845205c658118a134",
																"typeString": "literal_string \"TOO_MANY_MERKLE_QUERIES\""
															}
														],
														"id": 235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2183:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2183:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "2183:70:5"
											},
											{
												"AST": {
													"nativeSrc": "2273:3608:5",
													"nodeType": "YulBlock",
													"src": "2273:3608:5",
													"statements": [
														{
															"nativeSrc": "2469:51:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2469:51:5",
															"value": {
																"arguments": [
																	{
																		"name": "queuePtr",
																		"nativeSrc": "2490:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "2490:8:5"
																	},
																	{
																		"name": "INDEX_SIZE_IN_BYTES",
																		"nativeSrc": "2500:19:5",
																		"nodeType": "YulIdentifier",
																		"src": "2500:19:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2486:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2486:3:5"
																},
																"nativeSrc": "2486:34:5",
																"nodeType": "YulFunctionCall",
																"src": "2486:34:5"
															},
															"variables": [
																{
																	"name": "hashesPtr",
																	"nativeSrc": "2473:9:5",
																	"nodeType": "YulTypedName",
																	"src": "2473:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2533:50:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2533:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "n",
																		"nativeSrc": "2554:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "2554:1:5"
																	},
																	{
																		"name": "MERKLE_SLOT_SIZE_IN_BYTES",
																		"nativeSrc": "2557:25:5",
																		"nodeType": "YulIdentifier",
																		"src": "2557:25:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2550:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2550:3:5"
																},
																"nativeSrc": "2550:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2550:33:5"
															},
															"variables": [
																{
																	"name": "queueSize",
																	"nativeSrc": "2537:9:5",
																	"nodeType": "YulTypedName",
																	"src": "2537:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2645:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2645:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2658:1:5",
																"nodeType": "YulLiteral",
																"src": "2658:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "rdIdx",
																	"nativeSrc": "2649:5:5",
																	"nodeType": "YulTypedName",
																	"src": "2649:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2672:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2672:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2685:1:5",
																"nodeType": "YulLiteral",
																"src": "2685:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "wrIdx",
																	"nativeSrc": "2676:5:5",
																	"nodeType": "YulTypedName",
																	"src": "2676:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2768:40:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2768:40:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rdIdx",
																				"nativeSrc": "2791:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2791:5:5"
																			},
																			{
																				"name": "queuePtr",
																				"nativeSrc": "2798:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "2798:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2787:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:5"
																		},
																		"nativeSrc": "2787:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2787:20:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2781:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2781:5:5"
																},
																"nativeSrc": "2781:27:5",
																"nodeType": "YulFunctionCall",
																"src": "2781:27:5"
															},
															"variables": [
																{
																	"name": "index",
																	"nativeSrc": "2772:5:5",
																	"nodeType": "YulTypedName",
																	"src": "2772:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2821:33:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2821:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "channelPtr",
																		"nativeSrc": "2843:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "2843:10:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2837:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2837:5:5"
																},
																"nativeSrc": "2837:17:5",
																"nodeType": "YulFunctionCall",
																"src": "2837:17:5"
															},
															"variables": [
																{
																	"name": "proofPtr",
																	"nativeSrc": "2825:8:5",
																	"nodeType": "YulTypedName",
																	"src": "2825:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2952:2772:5",
																"nodeType": "YulBlock",
																"src": "2952:2772:5",
																"statements": [
																	{
																		"nativeSrc": "2970:33:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2970:33:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "index",
																					"nativeSrc": "2994:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2994:5:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3001:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3001:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "xor",
																				"nativeSrc": "2990:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2990:3:5"
																			},
																			"nativeSrc": "2990:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2990:13:5"
																		},
																		"variables": [
																			{
																				"name": "siblingIndex",
																				"nativeSrc": "2974:12:5",
																				"nodeType": "YulTypedName",
																				"src": "2974:12:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3103:177:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3103:177:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "siblingIndex",
																					"nativeSrc": "3153:12:5",
																					"nodeType": "YulIdentifier",
																					"src": "3153:12:5"
																				},
																				{
																					"name": "COMMITMENT_SIZE_IN_BYTES",
																					"nativeSrc": "3187:24:5",
																					"nodeType": "YulIdentifier",
																					"src": "3187:24:5"
																				},
																				{
																					"name": "TWO_COMMITMENTS_SIZE_IN_BYTES",
																					"nativeSrc": "3233:29:5",
																					"nodeType": "YulIdentifier",
																					"src": "3233:29:5"
																				}
																			],
																			"functionName": {
																				"name": "mulmod",
																				"nativeSrc": "3125:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3125:6:5"
																			},
																			"nativeSrc": "3125:155:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3125:155:5"
																		},
																		"variables": [
																			{
																				"name": "sibblingOffset",
																				"nativeSrc": "3107:14:5",
																				"nodeType": "YulTypedName",
																				"src": "3107:14:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3529:4:5",
																							"nodeType": "YulLiteral",
																							"src": "3529:4:5",
																							"type": "",
																							"value": "0x20"
																						},
																						{
																							"name": "sibblingOffset",
																							"nativeSrc": "3535:14:5",
																							"nodeType": "YulIdentifier",
																							"src": "3535:14:5"
																						}
																					],
																					"functionName": {
																						"name": "xor",
																						"nativeSrc": "3525:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3525:3:5"
																					},
																					"nativeSrc": "3525:25:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3525:25:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "rdIdx",
																									"nativeSrc": "3562:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3562:5:5"
																								},
																								{
																									"name": "hashesPtr",
																									"nativeSrc": "3569:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "3569:9:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3558:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3558:3:5"
																							},
																							"nativeSrc": "3558:21:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3558:21:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3552:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3552:5:5"
																					},
																					"nativeSrc": "3552:28:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3552:28:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3518:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3518:6:5"
																			},
																			"nativeSrc": "3518:63:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3518:63:5"
																		},
																		"nativeSrc": "3518:63:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3518:63:5"
																	},
																	{
																		"nativeSrc": "3598:60:5",
																		"nodeType": "YulAssignment",
																		"src": "3598:60:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "rdIdx",
																					"nativeSrc": "3614:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "3614:5:5"
																				},
																				{
																					"name": "MERKLE_SLOT_SIZE_IN_BYTES",
																					"nativeSrc": "3621:25:5",
																					"nodeType": "YulIdentifier",
																					"src": "3621:25:5"
																				},
																				{
																					"name": "queueSize",
																					"nativeSrc": "3648:9:5",
																					"nodeType": "YulIdentifier",
																					"src": "3648:9:5"
																				}
																			],
																			"functionName": {
																				"name": "addmod",
																				"nativeSrc": "3607:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3607:6:5"
																			},
																			"nativeSrc": "3607:51:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3607:51:5"
																		},
																		"variableNames": [
																			{
																				"name": "rdIdx",
																				"nativeSrc": "3598:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3598:5:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3896:26:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3896:26:5",
																		"value": {
																			"name": "proofPtr",
																			"nativeSrc": "3914:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "3914:8:5"
																		},
																		"variables": [
																			{
																				"name": "newHashPtr",
																				"nativeSrc": "3900:10:5",
																				"nodeType": "YulTypedName",
																				"src": "3900:10:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3939:51:5",
																		"nodeType": "YulAssignment",
																		"src": "3939:51:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "proofPtr",
																					"nativeSrc": "3955:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "3955:8:5"
																				},
																				{
																					"name": "COMMITMENT_SIZE_IN_BYTES",
																					"nativeSrc": "3965:24:5",
																					"nodeType": "YulIdentifier",
																					"src": "3965:24:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3951:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3951:3:5"
																			},
																			"nativeSrc": "3951:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3951:39:5"
																		},
																		"variableNames": [
																			{
																				"name": "proofPtr",
																				"nativeSrc": "3939:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "3939:8:5"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "wrIdx",
																							"nativeSrc": "4347:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "4347:5:5"
																						},
																						{
																							"name": "queuePtr",
																							"nativeSrc": "4354:8:5",
																							"nodeType": "YulIdentifier",
																							"src": "4354:8:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4343:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4343:3:5"
																					},
																					"nativeSrc": "4343:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4343:20:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "index",
																							"nativeSrc": "4369:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "4369:5:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4376:1:5",
																							"nodeType": "YulLiteral",
																							"src": "4376:1:5",
																							"type": "",
																							"value": "2"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "4365:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4365:3:5"
																					},
																					"nativeSrc": "4365:13:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4365:13:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4336:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4336:6:5"
																			},
																			"nativeSrc": "4336:43:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4336:43:5"
																		},
																		"nativeSrc": "4336:43:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4336:43:5"
																	},
																	{
																		"nativeSrc": "4483:36:5",
																		"nodeType": "YulAssignment",
																		"src": "4483:36:5",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "rdIdx",
																							"nativeSrc": "4502:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "4502:5:5"
																						},
																						{
																							"name": "queuePtr",
																							"nativeSrc": "4509:8:5",
																							"nodeType": "YulIdentifier",
																							"src": "4509:8:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4498:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4498:3:5"
																					},
																					"nativeSrc": "4498:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4498:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4492:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4492:5:5"
																			},
																			"nativeSrc": "4492:27:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4492:27:5"
																		},
																		"variableNames": [
																			{
																				"name": "index",
																				"nativeSrc": "4483:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4483:5:5"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4563:704:5",
																			"nodeType": "YulBlock",
																			"src": "4563:704:5",
																			"statements": [
																				{
																					"nativeSrc": "4656:35:5",
																					"nodeType": "YulAssignment",
																					"src": "4656:35:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "rdIdx",
																								"nativeSrc": "4674:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "4674:5:5"
																							},
																							{
																								"name": "hashesPtr",
																								"nativeSrc": "4681:9:5",
																								"nodeType": "YulIdentifier",
																								"src": "4681:9:5"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4670:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4670:3:5"
																						},
																						"nativeSrc": "4670:21:5",
																						"nodeType": "YulFunctionCall",
																						"src": "4670:21:5"
																					},
																					"variableNames": [
																						{
																							"name": "newHashPtr",
																							"nativeSrc": "4656:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "4656:10:5"
																						}
																					]
																				},
																				{
																					"nativeSrc": "4762:51:5",
																					"nodeType": "YulAssignment",
																					"src": "4762:51:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "proofPtr",
																								"nativeSrc": "4778:8:5",
																								"nodeType": "YulIdentifier",
																								"src": "4778:8:5"
																							},
																							{
																								"name": "COMMITMENT_SIZE_IN_BYTES",
																								"nativeSrc": "4788:24:5",
																								"nodeType": "YulIdentifier",
																								"src": "4788:24:5"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4774:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4774:3:5"
																						},
																						"nativeSrc": "4774:39:5",
																						"nodeType": "YulFunctionCall",
																						"src": "4774:39:5"
																					},
																					"variableNames": [
																						{
																							"name": "proofPtr",
																							"nativeSrc": "4762:8:5",
																							"nodeType": "YulIdentifier",
																							"src": "4762:8:5"
																						}
																					]
																				},
																				{
																					"nativeSrc": "4834:60:5",
																					"nodeType": "YulAssignment",
																					"src": "4834:60:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "rdIdx",
																								"nativeSrc": "4850:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "4850:5:5"
																							},
																							{
																								"name": "MERKLE_SLOT_SIZE_IN_BYTES",
																								"nativeSrc": "4857:25:5",
																								"nodeType": "YulIdentifier",
																								"src": "4857:25:5"
																							},
																							{
																								"name": "queueSize",
																								"nativeSrc": "4884:9:5",
																								"nodeType": "YulIdentifier",
																								"src": "4884:9:5"
																							}
																						],
																						"functionName": {
																							"name": "addmod",
																							"nativeSrc": "4843:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "4843:6:5"
																						},
																						"nativeSrc": "4843:51:5",
																						"nodeType": "YulFunctionCall",
																						"src": "4843:51:5"
																					},
																					"variableNames": [
																						{
																							"name": "rdIdx",
																							"nativeSrc": "4834:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "4834:5:5"
																						}
																					]
																				},
																				{
																					"nativeSrc": "5213:36:5",
																					"nodeType": "YulAssignment",
																					"src": "5213:36:5",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "rdIdx",
																										"nativeSrc": "5232:5:5",
																										"nodeType": "YulIdentifier",
																										"src": "5232:5:5"
																									},
																									{
																										"name": "queuePtr",
																										"nativeSrc": "5239:8:5",
																										"nodeType": "YulIdentifier",
																										"src": "5239:8:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5228:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "5228:3:5"
																								},
																								"nativeSrc": "5228:20:5",
																								"nodeType": "YulFunctionCall",
																								"src": "5228:20:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "5222:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "5222:5:5"
																						},
																						"nativeSrc": "5222:27:5",
																						"nodeType": "YulFunctionCall",
																						"src": "5222:27:5"
																					},
																					"variableNames": [
																						{
																							"name": "index",
																							"nativeSrc": "5213:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "5213:5:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "index",
																					"nativeSrc": "4542:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "4542:5:5"
																				},
																				{
																					"name": "siblingIndex",
																					"nativeSrc": "4549:12:5",
																					"nodeType": "YulIdentifier",
																					"src": "4549:12:5"
																				}
																			],
																			"functionName": {
																				"name": "eq",
																				"nativeSrc": "4539:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "4539:2:5"
																			},
																			"nativeSrc": "4539:23:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4539:23:5"
																		},
																		"nativeSrc": "4536:731:5",
																		"nodeType": "YulIf",
																		"src": "4536:731:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sibblingOffset",
																					"nativeSrc": "5292:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "5292:14:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "newHashPtr",
																							"nativeSrc": "5314:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "5314:10:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5308:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5308:5:5"
																					},
																					"nativeSrc": "5308:17:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5308:17:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5285:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5285:6:5"
																			},
																			"nativeSrc": "5285:41:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5285:41:5"
																		},
																		"nativeSrc": "5285:41:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5285:41:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "wrIdx",
																							"nativeSrc": "5438:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "5438:5:5"
																						},
																						{
																							"name": "hashesPtr",
																							"nativeSrc": "5445:9:5",
																							"nodeType": "YulIdentifier",
																							"src": "5445:9:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5434:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5434:3:5"
																					},
																					"nativeSrc": "5434:21:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5434:21:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "COMMITMENT_MASK",
																							"nativeSrc": "5506:15:5",
																							"nodeType": "YulIdentifier",
																							"src": "5506:15:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5557:4:5",
																									"nodeType": "YulLiteral",
																									"src": "5557:4:5",
																									"type": "",
																									"value": "0x00"
																								},
																								{
																									"name": "TWO_COMMITMENTS_SIZE_IN_BYTES",
																									"nativeSrc": "5563:29:5",
																									"nodeType": "YulIdentifier",
																									"src": "5563:29:5"
																								}
																							],
																							"functionName": {
																								"name": "keccak256",
																								"nativeSrc": "5547:9:5",
																								"nodeType": "YulIdentifier",
																								"src": "5547:9:5"
																							},
																							"nativeSrc": "5547:46:5",
																							"nodeType": "YulFunctionCall",
																							"src": "5547:46:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5477:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5477:3:5"
																					},
																					"nativeSrc": "5477:138:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5477:138:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5406:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5406:6:5"
																			},
																			"nativeSrc": "5406:227:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5406:227:5"
																		},
																		"nativeSrc": "5406:227:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5406:227:5"
																	},
																	{
																		"nativeSrc": "5650:60:5",
																		"nodeType": "YulAssignment",
																		"src": "5650:60:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "wrIdx",
																					"nativeSrc": "5666:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "5666:5:5"
																				},
																				{
																					"name": "MERKLE_SLOT_SIZE_IN_BYTES",
																					"nativeSrc": "5673:25:5",
																					"nodeType": "YulIdentifier",
																					"src": "5673:25:5"
																				},
																				{
																					"name": "queueSize",
																					"nativeSrc": "5700:9:5",
																					"nodeType": "YulIdentifier",
																					"src": "5700:9:5"
																				}
																			],
																			"functionName": {
																				"name": "addmod",
																				"nativeSrc": "5659:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5659:6:5"
																			},
																			"nativeSrc": "5659:51:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5659:51:5"
																		},
																		"variableNames": [
																			{
																				"name": "wrIdx",
																				"nativeSrc": "5650:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5650:5:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "index",
																		"nativeSrc": "2925:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2925:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2932:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2932:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2922:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2922:2:5"
																},
																"nativeSrc": "2922:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2922:12:5"
															},
															"nativeSrc": "2901:2823:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2935:16:5",
																"nodeType": "YulBlock",
																"src": "2935:16:5",
																"statements": []
															},
															"pre": {
																"nativeSrc": "2905:16:5",
																"nodeType": "YulBlock",
																"src": "2905:16:5",
																"statements": []
															},
															"src": "2901:2823:5"
														},
														{
															"nativeSrc": "5737:36:5",
															"nodeType": "YulAssignment",
															"src": "5737:36:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rdIdx",
																				"nativeSrc": "5755:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5755:5:5"
																			},
																			{
																				"name": "hashesPtr",
																				"nativeSrc": "5762:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5762:9:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5751:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5751:3:5"
																		},
																		"nativeSrc": "5751:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5751:21:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5745:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5745:5:5"
																},
																"nativeSrc": "5745:28:5",
																"nodeType": "YulFunctionCall",
																"src": "5745:28:5"
															},
															"variableNames": [
																{
																	"name": "hash",
																	"nativeSrc": "5737:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5737:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "channelPtr",
																		"nativeSrc": "5850:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "5850:10:5"
																	},
																	{
																		"name": "proofPtr",
																		"nativeSrc": "5862:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "5862:8:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5843:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5843:6:5"
																},
																"nativeSrc": "5843:28:5",
																"nodeType": "YulFunctionCall",
																"src": "5843:28:5"
															},
															"nativeSrc": "5843:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "5843:28:5"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 212,
														"isOffset": false,
														"isSlot": false,
														"src": "5506:15:5",
														"valueSize": 1
													},
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "3187:24:5",
														"valueSize": 1
													},
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "3965:24:5",
														"valueSize": 1
													},
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "4788:24:5",
														"valueSize": 1
													},
													{
														"declaration": 221,
														"isOffset": false,
														"isSlot": false,
														"src": "2500:19:5",
														"valueSize": 1
													},
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "2557:25:5",
														"valueSize": 1
													},
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "3621:25:5",
														"valueSize": 1
													},
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "4857:25:5",
														"valueSize": 1
													},
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "5673:25:5",
														"valueSize": 1
													},
													{
														"declaration": 218,
														"isOffset": false,
														"isSlot": false,
														"src": "3233:29:5",
														"valueSize": 1
													},
													{
														"declaration": 218,
														"isOffset": false,
														"isSlot": false,
														"src": "5563:29:5",
														"valueSize": 1
													},
													{
														"declaration": 223,
														"isOffset": false,
														"isSlot": false,
														"src": "2843:10:5",
														"valueSize": 1
													},
													{
														"declaration": 223,
														"isOffset": false,
														"isSlot": false,
														"src": "5850:10:5",
														"valueSize": 1
													},
													{
														"declaration": 233,
														"isOffset": false,
														"isSlot": false,
														"src": "5737:4:5",
														"valueSize": 1
													},
													{
														"declaration": 229,
														"isOffset": false,
														"isSlot": false,
														"src": "2554:1:5",
														"valueSize": 1
													},
													{
														"declaration": 225,
														"isOffset": false,
														"isSlot": false,
														"src": "2490:8:5",
														"valueSize": 1
													},
													{
														"declaration": 225,
														"isOffset": false,
														"isSlot": false,
														"src": "2798:8:5",
														"valueSize": 1
													},
													{
														"declaration": 225,
														"isOffset": false,
														"isSlot": false,
														"src": "4354:8:5",
														"valueSize": 1
													},
													{
														"declaration": 225,
														"isOffset": false,
														"isSlot": false,
														"src": "4509:8:5",
														"valueSize": 1
													},
													{
														"declaration": 225,
														"isOffset": false,
														"isSlot": false,
														"src": "5239:8:5",
														"valueSize": 1
													}
												],
												"id": 242,
												"nodeType": "InlineAssembly",
												"src": "2264:3617:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 244,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "5898:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 245,
																"name": "root",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "5906:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "5898:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f4d45524b4c455f50524f4f46",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5912:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60682db7b8382640566339287ec992c4afff51b5da1ce5e92245f7757b3b01b6",
																"typeString": "literal_string \"INVALID_MERKLE_PROOF\""
															},
															"value": "INVALID_MERKLE_PROOF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60682db7b8382640566339287ec992c4afff51b5da1ce5e92245f7757b3b01b6",
																"typeString": "literal_string \"INVALID_MERKLE_PROOF\""
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5890:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5890:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "5890:45:5"
											}
										]
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyMerkle",
									"nameLocation": "2005:12:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 231,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2141:8:5"
									},
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "channelPtr",
												"nameLocation": "2035:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2027:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2027:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "queuePtr",
												"nameLocation": "2063:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2055:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "2089:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2081:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 226,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "2111:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2103:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2017:101:5"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2167:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2159:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2158:14:5"
									},
									"scope": 252,
									"src": "1996:3946:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 253,
							"src": "696:5248:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "636:5309:5"
				},
				"id": 5
			}
		}
	}
}